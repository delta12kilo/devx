{"version":3,"sources":["components/layout/loading-11.gif","actions/alert.js","actions/types.js","utils/setAuthToken.js","actions/auth.js","components/layout/navbar.js","components/layout/landing.js","components/auth/login.js","components/auth/register.js","components/layout/Alert.js","components/layout/spinner.js","actions/profile.js","components/dashboard/DashboardActions.js","components/dashboard/experience.js","components/dashboard/education.js","components/dashboard/Dashboard.js","components/profile-forms/CreateProfile.js","components/routing/PrivateRoute.js","components/profile-forms/edit-profile.js","components/profile-forms/add-experience.js","components/profile-forms/add-education.js","components/profiles/profile-item.js","components/profiles/profiles.js","components/profile/ProfileTop.js","components/profile/ProfileAbout.js","components/profile/ProfileExperience.js","components/profile/ProfileEducation.js","components/profile/ProfileGithub.js","components/profile/profile.js","components/Posts/PostItem.js","actions/post.js","components/Posts/PostForm.js","components/Posts/Posts.js","components/Post/CommentForm.js","components/Post/CommentItem.js","components/Post/post.js","reducers/alert.js","reducers/auth.js","reducers/profile.js","reducers/post.js","reducers/index.js","store.js","App.js","index.js"],"names":["module","exports","setAlert","msg","alertType","dispatch","id","uuidv4","type","payload","setTimeout","setAuthToken","token","axios","defaults","headers","common","loadUser","a","localStorage","get","res","data","connect","state","auth","logout","isAuthenticated","loading","authlinks","to","className","onClick","href","guestlinks","isAutenticated","login","email","password","config","body","JSON","stringify","post","errors","response","forEach","error","useState","formData","setFormData","onChange","e","target","name","value","onSubmit","preventDefault","placeholder","minLength","register","password2","alerts","alert","length","map","key","src","spinner","style","width","margin","display","alt","getCurrentProfile","statusText","status","createProfile","history","edit","push","addEducation","put","DashboardActions","class","deleteExperience","delete","experience","experiences","exp","_id","company","title","format","from","deleteEducation","education","educations","school","degree","profile","deleteAccount","window","confirm","user","useEffect","withRouter","website","location","skills","githubusername","bio","twitter","facebook","linkedin","youtube","instagram","displaySocialInputs","toggleSocialInputs","Component","component","rest","render","props","join","social","addExperience","current","description","toDateDisabled","toggleDisabled","required","checked","disabled","cols","rows","propTypes","PropTypes","func","isRequired","fieldofstudy","ProfileItem","avatar","slice","skill","index","getProfiles","profiles","prof","ProfileTop","rel","ProfileAbout","trim","split","ProfileExperience","ProfileEducation","repos","getRepos","username","repo","html_url","stargazers_count","watchers_count","forks_count","getProfileById","userId","match","params","PostItem","addLike","removeLike","deletePost","text","likes","comments","date","showActions","defaultProps","addPost","setText","getPosts","posts","addComment","postId","deleteComment","commentId","comment","getPost","initialState","getItem","initialstate","combineReducers","action","filter","setItem","removeItem","middleware","thunk","store","createStore","rootReducer","composeWithDevTools","applyMiddleware","App","exact","path","Landing","Register","Login","Profiles","Profile","Dashboard","CreateProfile","EditProfile","AddExperience","AddEducation","Posts","Post","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.9463b6cf.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/loading-11.1ac21cc0.gif\";","import { v4 as uuidv4 } from 'uuid';\nimport { SET_ALERT, REMOVE_ALERT } from './types';\n\nexport const setAlert = (msg, alertType) => dispatch => {\n    const id = uuidv4();\n    dispatch({\n        type: SET_ALERT,\n        payload: { msg, alertType, id }\n    });\n\n    setTimeout(() => dispatch({ type: REMOVE_ALERT, payload: id }), 5000);\n}","export const SET_ALERT = 'SET_ALERT';\nexport const REMOVE_ALERT = 'REMOVE_ALERT';\nexport const REGISTER_SUCCESS = 'REGISTER_SUCCESS';\nexport const REGISTER_FAIL = 'REGISTER_FAIL';\nexport const USER_LOADED = 'USER_LOADED';\nexport const AUTH_ERROR = 'AUTH_ERROR';\nexport const LOGIN_SUCCESS = 'LOGIN_SUCCESS';\nexport const LOGIN_FAIL = 'LOGIN_FAIL';\nexport const LOGOUT = 'LOGOUT';\nexport const GET_PROFILE = 'GET_PROFILE';\nexport const GET_PROFILES = 'GET_PROFILES';\nexport const CLEAR_PROFILE = 'CLEAR_PROFILE';\nexport const PROFILE_ERROR = 'PROFILE_ERROR';\nexport const UPDATE_PROFILE = 'UPDATE_PROFILE';\nexport const DELETE_ACCOUNT = 'DELETE_ACCOUNT';\nexport const GET_REPOS = 'GET_REPOS';\nexport const GET_POSTS = 'GET_POSTS';\nexport const POST_ERROR = 'POST_ERROR';\nexport const UPDATE_LIKES = 'UPDATE_LIKES';\nexport const DELETE_POST = 'DELETE_POST';\nexport const ADD_POST = 'ADD_POST';\nexport const GET_POST = 'GET_POST';\nexport const ADD_COMMENT = 'ADD_COMMENT';\nexport const REMOVE_COMMENT = 'REMOVE_COMMENT';\n\n","import axios from 'axios';\n\nconst setAuthToken = token => {\n    if (token) {\n        axios.defaults.headers.common['x-auth-token'] = token;\n    }\n    else {\n        delete axios.defaults.headers.common['x-auth-token'];\n    }\n}\n\n\nexport default setAuthToken;","\nimport axios from 'axios';\nimport { setAlert } from './alert';\nimport { REGISTER_SUCCESS, REGISTER_FAIL, USER_LOADED, AUTH_ERROR, LOGIN_SUCCESS, LOGIN_FAIL, LOGOUT, CLEAR_PROFILE } from './types';\nimport setAuthToken from '../utils/setAuthToken';\n\n//Load User\nexport const loadUser = () => async dispatch => {\n    if (localStorage.token) {\n        setAuthToken(localStorage.token);\n    }\n    try {\n        const res = await axios.get('/api/auth');\n        dispatch({ type: USER_LOADED, payload: res.data });\n\n    } catch (err) {\n        dispatch({ type: AUTH_ERROR });\n    }\n}\n\n\n//Register User\nexport const register = ({ name, email, password }) => async dispatch => {\n    const config = {\n        headers:\n        {\n            'Content-Type': 'application/json'\n        }\n    }\n\n    const body = JSON.stringify({ name, email, password });\n\n    try {\n        const res = await axios.post('/api/users', body, config);\n\n        dispatch(\n            {\n                type: REGISTER_SUCCESS,\n                payload: res.data\n            }\n        );\n        dispatch(loadUser());\n    } catch (err) {\n        const errors = err.response.data.errors;\n        if (errors) {\n            errors.forEach((error) => dispatch(setAlert(error.msg, 'danger')));\n        }\n        dispatch({\n            type: REGISTER_FAIL,\n        }\n        )\n    }\n\n}\n\n//SignIN\n\nexport const login = (email, password) => async dispatch => {\n    const config = {\n        headers:\n        {\n            'Content-Type': 'application/json'\n        }\n    }\n\n    const body = JSON.stringify({ email, password });\n\n    try {\n        const res = await axios.post('/api/auth', body, config);\n\n        dispatch(\n            {\n                type: LOGIN_SUCCESS,\n                payload: res.data\n            }\n        );\n        dispatch(loadUser());\n    } catch (err) {\n        const errors = err.response.data.errors;\n        if (errors) {\n            errors.forEach((error) => dispatch(setAlert(error.msg, 'danger')));\n        }\n        dispatch({\n            type: LOGIN_FAIL,\n        }\n        )\n    }\n\n};\n\n//LOGOUT\n\nexport const logout = () => dispatch => {\n    dispatch({\n        type: LOGOUT,\n    });\n    dispatch({\n        type: CLEAR_PROFILE,\n    });\n}","import React, { Fragment } from 'react';\nimport { Link } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { logout } from '../../actions/auth';\n\nconst Navbar = ({ auth: { isAuthenticated, loading }, logout }) => {\n\n    const authlinks = (\n        <ul>\n            <li>\n                <Link to=\"/profiles\">\n                    Our Ninjas</Link>{' |'}</li>\n            <li>\n                <Link to=\"/dashboard\"> <i className=\"fas fa-user\" />{' '}\n                    Dashboard</Link></li>\n            <li>\n                <Link to=\"/posts\">\n                    Feed</Link></li>\n            <li>\n                <a onClick={logout} href=\"/login\">\n                    <i className=\"fas fa-sign-out-alt\" />{' '}\n                    logout</a>\n            </li>\n        </ul>\n    );\n\n    const guestlinks = (\n        <ul>\n            <li><Link to=\"/profiles\"> Our Ninjas </Link>{' |'}</li>\n            <li><Link to=\"/register\">Be a Ninja</Link></li>\n            <li><Link to=\"/login\">Login</Link></li>\n        </ul>\n    );\n\n\n\n    return (\n        <nav className=\"navbar navbar-dark\">\n            <h1>\n                <Link to=\"/\"><i className=\"fas fa-code\"></i> Ninja|Community</Link>\n            </h1>\n            {!loading && (<Fragment>{isAuthenticated ? authlinks : guestlinks}</Fragment>)}\n        </nav>\n    );\n}\n\nNavbar.propTypes = {\n    logout: PropTypes.func.isRequired,\n    auth: PropTypes.object.isRequired,\n}\n\nconst mapStateToProps = state => (\n    {\n        auth: state.auth\n    }\n);\n\nexport default connect(mapStateToProps, { logout })(Navbar);\n\n","import React from 'react';\nimport { Link, Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\n\nconst Landing = ({ isAutenticated }) => {\n    if (isAutenticated) {\n        return <Redirect to=\"/dashboard\" />\n    }\n    return (\n        <section className=\"landing\">\n            <div className=\"dark-overlay\">\n                <div className=\"landing-inner\">\n                    <h1 className=\"x-large\">Ninja | Community</h1>\n                    <p className=\"lead\">\n                        Join us as a Ninja and share your thoughts with other Ninjas.\n                    </p>\n                    <div className=\"buttons\">\n                        <Link to=\"/register\" className=\"btn btn-primary\">Sign Up</Link>\n                        <Link to=\"/login\" className=\"btn btn-light\">Login</Link>\n                    </div>\n                </div>\n            </div>\n        </section>\n    );\n}\nLanding.propTypes = {\n    isAutenticated: PropTypes.bool,\n}\n\nconst mapStateToProps = state => ({\n    isAutenticated: state.auth.isAutenticated\n})\n\nexport default connect(mapStateToProps)(Landing)","import React, { Fragment, useState } from 'react'\nimport { Link, Redirect } from 'react-router-dom';\nimport { register } from '../../actions/auth';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { setAlert } from '../../actions/alert';\nimport { login } from '../../actions/auth';\n\nconst Login = ({ login, isAuthenticated }) => {\n\n    const [formData, setFormData] = useState(\n        {\n            email: '',\n            password: ''\n        }\n    );\n\n    const { email, password } = formData;\n    const onChange = e => setFormData(\n        { ...formData, [e.target.name]: e.target.value }\n    );\n\n    const onSubmit = async e => {\n        e.preventDefault();\n\n        login(email, password);\n    }\n\n    //redirect if logged in\n\n    if (isAuthenticated) {\n        return <Redirect to=\"dashboard\" />\n    }\n    return (\n        <Fragment>\n            <h1 className=\"large text-primary\">explore..</h1>\n            <p className=\"lead\"><i className=\"fas fa-user\"></i> &nbsp; hey ! Ninja</p>\n            <form className=\"form\" onSubmit={e => onSubmit(e)}>\n\n                <div className=\"form-group\">\n                    <input type=\"email\" placeholder=\"Ninja Id\" name=\"email\" value={email} onChange={e => onChange(e)} />\n                </div>\n                <div className=\"form-group\">\n                    <input\n                        type=\"password\"\n                        placeholder=\"Ninja Password\"\n                        name=\"password\"\n                        value={password} onChange={e => onChange(e)}\n                        minLength=\"6\"\n                    />\n                </div>\n                <input type=\"submit\" className=\"btn btn-primary\" value=\"Login\" />\n            </form>\n            <p className=\"my-1\">\n                Not a Ninja? <Link to=\"/register\">Sign Up</Link>\n            </p>\n        </Fragment>\n    );\n}\n\n\nLogin.propTypes = {\n    // setAlert: PropTypes.func.isRequired,\n    login: PropTypes.func.isRequired,\n    isAuthenticated: PropTypes.bool,\n};\n\nconst mapStateToProps = state =>\n    ({\n        isAuthenticated: state.auth.isAuthenticated\n\n    });\n\n\nexport default connect(mapStateToProps, { setAlert, login })(Login)\n","import React, { Fragment, useState } from 'react'\nimport { Link, Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { setAlert } from '../../actions/alert';\nimport { register } from '../../actions/auth';\nimport PropTypes from 'prop-types';\n\n\n\nimport { JsonWebTokenError } from 'jsonwebtoken';\n\nconst Register = ({ setAlert, register, isAuthenticated }) => {\n\n    const [formData, setFormData] = useState(\n        {\n            name: '',\n            email: '',\n            password: '',\n            password2: ''\n        }\n    );\n\n    const { name, email, password, password2 } = formData;\n    const onChange = e => setFormData(\n        { ...formData, [e.target.name]: e.target.value }\n    );\n\n    const onSubmit = async e => {\n        e.preventDefault();\n        if (password != password2) {\n            setAlert(\"Hey ! Ninja, Password Mismatched !\", 'danger');\n        }\n        else {\n            register({ name, email, password });\n        }\n\n    }\n\n    if (isAuthenticated) {\n        return <Redirect to=\"dashboard\" />\n    }\n\n    return (\n        <Fragment>\n            <h1 className=\"large text-primary\">Be a Ninja</h1>\n            <p className=\"lead\">  Setup Account  &nbsp; <i className=\"fas fa-user\"></i> </p>\n            <form className=\"form\" onSubmit={e => onSubmit(e)}>\n                <div className=\"form-group\">\n                    <input type=\"text\" placeholder=\"Ninja Name\" name=\"name\" value={name} onChange={e => onChange(e)} />\n                </div>\n                <div className=\"form-group\">\n                    <input type=\"email\" placeholder=\"Email Address\" name=\"email\" value={email} onChange={e => onChange(e)} />\n                    <small className=\"form-text\">Use Gravatar email !</small>\n                </div>\n                <div className=\"form-group\">\n                    <input\n                        type=\"password\"\n                        placeholder=\"Password\"\n                        name=\"password\"\n                        value={password} onChange={e => onChange(e)}\n                    />\n                </div>\n                <div className=\"form-group\">\n                    <input\n                        type=\"password\"\n                        placeholder=\"Confirm Password\"\n                        name=\"password2\"\n                        value={password2} onChange={e => onChange(e)}\n                    />\n                </div>\n                <input type=\"submit\" className=\"btn btn-primary\" value=\"Register\" />\n            </form>\n            <p className=\"my-1\">\n                Already a Ninja? <Link to=\"/login\">Sign In</Link>\n            </p>\n        </Fragment>\n    );\n}\n\nRegister.propTypes = {\n    setAlert: PropTypes.func.isRequired,\n    register: PropTypes.func.isRequired,\n    isAuthenticated: PropTypes.bool,\n};\n\nconst mapStateToProps = state =>\n    ({\n        isAuthenticated: state.auth.isAuthenticated\n\n    });\nexport default connect(mapStateToProps, { setAlert, register })(Register)","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\n\nconst Alert = ({ alerts }) =>\n    alerts !== null && alerts.length > 0 && alerts.map(alert => (\n        <div key={alert.id} className={`alert alert-${alert.alertType}`}>\n            {alert.msg}\n        </div>\n    ));\n\nAlert.propTypes = {\n    alerts: PropTypes.array.isRequired\n};\n\nconst mapStateToProps = state =>\n    ({\n        alerts: state.alert\n\n    });\n\nexport default connect(mapStateToProps)(Alert);\n","import React, { Fragment } from 'react';\nimport spinner from './loading-11.gif'\n\nexport default () => (\n    <Fragment>\n        <img\n            src={spinner}\n            style={{ width: '200px', margin: 'auto', display: 'block' }}\n            alt=\"loading you Ninja..\"\n        />\n    </Fragment>\n);","import axios from 'axios';\nimport { setAlert } from './alert';\nimport { PROFILE_ERROR, GET_PROFILE, UPDATE_PROFILE, DELETE_ACCOUNT, CLEAR_PROFILE, GET_PROFILES, GET_REPOS } from './types';\nimport setAuthToken from '../utils/setAuthToken';\n\n//Get current users profile\n\nexport const getCurrentProfile = () => async dispatch => {\n    try {\n        const res = await axios.get('/api/profile/me');\n\n        dispatch({\n            type: GET_PROFILE,\n            payload: res.data\n        });\n    } catch (err) {\n        dispatch(\n            {\n                type: PROFILE_ERROR,\n                payload: { msg: err.response.statusText, status: err.response.status }\n            }\n        );\n    }\n}\n\n//get all Profiles\n\nexport const getProfiles = () => async dispatch => {\n    dispatch({\n        type: CLEAR_PROFILE\n    });\n    try {\n        const res = await axios.get('/api/profile');\n\n        dispatch({\n            type: GET_PROFILES,\n            payload: res.data\n        });\n    } catch (err) {\n        dispatch(\n            {\n                type: PROFILE_ERROR,\n                payload: { msg: err.response.statusText, status: err.response.status }\n            }\n        );\n    }\n}\n\n\n\n//get github repos\n\nexport const getRepos = username => async dispatch => {\n\n    try {\n        const res = await axios.get(`/api/profile/github/${username}`);\n\n        dispatch({\n            type: GET_REPOS,\n            payload: res.data\n        });\n    } catch (err) {\n        dispatch(\n            {\n                type: PROFILE_ERROR,\n                payload: { msg: err.response.statusText, status: err.response.status }\n            }\n        );\n    }\n}\n\n//getprofileid\n\nexport const getProfileById = userId => async dispatch => {\n\n    try {\n        const res = await axios.get(`/api/profile/user/${userId}`);\n\n        dispatch({\n            type: GET_PROFILE,\n            payload: res.data\n        });\n    } catch (err) {\n        dispatch(\n            {\n                type: PROFILE_ERROR,\n                payload: { msg: err.response.statusText, status: err.response.status }\n            }\n        );\n    }\n}\n// create or update profile\n\nexport const createProfile = (formData, history, edit = false) => async dispatch => {\n    try {\n        const config = {\n            headers:\n            {\n                'Content-Type': 'application/json'\n            }\n        }\n\n        const res = await axios.post('/api/profile', formData, config);\n        dispatch({\n            type: GET_PROFILE,\n            payload: res.data\n        });\n\n        dispatch(setAlert(edit ? 'Profile Updated' : 'Profile Created', 'success'));\n\n        if (!edit) {\n            history.push('/dashboard');\n        }\n\n    } catch (err) {\n        const errors = err.response.data.errors;\n        if (errors) {\n            errors.forEach((error) => dispatch(setAlert(error.msg, 'danger')));\n        }\n        dispatch(\n            {\n                type: PROFILE_ERROR,\n                payload: { msg: err.response.statusText, status: err.response.status }\n            }\n        );\n\n    }\n};\n\n// Add Experience\n\nexport const addExperience = (formData, history) => async dispatch => {\n    try {\n        const config = {\n            headers:\n            {\n                'Content-Type': 'application/json'\n            }\n        }\n\n        const res = await axios.put('/api/profile/experience', formData, config);\n        dispatch({\n            type: UPDATE_PROFILE,\n            payload: res.data\n        });\n\n        dispatch(setAlert('Experience Added', 'success'));\n\n        history.push('/dashboard');\n\n    } catch (err) {\n        const errors = err.response.data.errors;\n        if (errors) {\n            errors.forEach((error) => dispatch(setAlert(error.msg, 'danger')));\n        }\n        dispatch(\n            {\n                type: PROFILE_ERROR,\n                payload: { msg: err.response.statusText, status: err.response.status }\n            }\n        );\n\n    }\n};\n\n// Add Education\n\nexport const addEducation = (formData, history) => async dispatch => {\n    try {\n        const config = {\n            headers:\n            {\n                'Content-Type': 'application/json'\n            }\n        }\n\n        const res = await axios.put('/api/profile/education', formData, config);\n        dispatch({\n            type: UPDATE_PROFILE,\n            payload: res.data\n        });\n\n        dispatch(setAlert('Education Added', 'success'));\n\n        history.push('/dashboard');\n\n    } catch (err) {\n        const errors = err.response.data.errors;\n        if (errors) {\n            errors.forEach((error) => dispatch(setAlert(error.msg, 'danger')));\n        }\n        dispatch(\n            {\n                type: PROFILE_ERROR,\n                payload: { msg: err.response.statusText, status: err.response.status }\n            }\n        );\n\n    }\n};\n\n//delete experience\nexport const deleteExperience = id => async dispatch => {\n    try {\n        const res = await axios.delete('/api/profile/experience/${id}');\n\n        dispatch({\n            type: UPDATE_PROFILE,\n            payload: res.data\n        });\n\n        dispatch(setAlert('Experience Removed', 'danger'));\n\n    } catch (err) {\n        const errors = err.response.data.errors;\n        if (errors) {\n            errors.forEach((error) => dispatch(setAlert(error.msg, 'danger')));\n        }\n        dispatch(\n            {\n                type: PROFILE_ERROR,\n                payload: { msg: err.response.statusText, status: err.response.status }\n            }\n        );\n\n    }\n}\n\n\n//delete education\nexport const deleteEducation = id => async dispatch => {\n    try {\n        const res = await axios.delete('/api/profile/education/${id}');\n\n        dispatch({\n            type: UPDATE_PROFILE,\n            payload: res.data\n        });\n\n        dispatch(setAlert('Education Removed', 'danger'));\n\n    } catch (err) {\n        const errors = err.response.data.errors;\n        if (errors) {\n            errors.forEach((error) => dispatch(setAlert(error.msg, 'danger')));\n        }\n        dispatch(\n            {\n                type: PROFILE_ERROR,\n                payload: { msg: err.response.statusText, status: err.response.status }\n            }\n        );\n\n    }\n}\n\n//delete Account\n\nexport const deleteAccount = () => async dispatch => {\n    if (window.confirm('Are you sure ! Ninja ?')) {\n        try {\n            const res = await axios.delete('/api/profile');\n\n            dispatch({\n                type: CLEAR_PROFILE,\n            });\n\n            dispatch({\n                type: DELETE_ACCOUNT,\n            });\n\n            dispatch(setAlert('Your Account has been permanently Deleted', 'danger'));\n\n        } catch (err) {\n            const errors = err.response.data.errors;\n            if (errors) {\n                errors.forEach((error) => dispatch(setAlert(error.msg, 'danger')));\n            }\n            dispatch(\n                {\n                    type: PROFILE_ERROR,\n                    payload: { msg: err.response.statusText, status: err.response.status }\n                }\n            );\n\n        }\n    }\n}\n\n","import React from 'react'\nimport { Link } from 'react-router-dom';\n\nconst DashboardActions = () => {\n    return (\n        <div class=\"dash-buttons\">\n            <Link to=\"/edit-profile\" class=\"btn btn-light\"\n            ><i class=\"fas fa-user-circle text-primary\"></i> Edit Profile</Link>\n            <Link to=\"/add-experience\" class=\"btn btn-light\"\n            ><i class=\"fab fa-black-tie text-primary\"></i> Add Experience</Link>\n            <Link to=\"/add-education\" class=\"btn btn-light\"\n            ><i class=\"fas fa-graduation-cap text-primary\"></i> Add Education</Link>\n        </div>\n    );\n};\n\nexport default DashboardActions\n","import React, { Fragment } from 'react'\nimport PropTypes from 'prop-types'\nimport Moment from 'react-moment';\nimport { connect } from 'react-redux';\nimport { deleteExperience } from '../../actions/profile';\n\n\nconst Experience = ({ experience, deleteExperience }) => {\n    const experiences = experience.map(exp => (\n        <tr key={exp._id}>\n            <td>{exp.company}</td>\n            <td className='hide-sm'>{exp.title}</td>\n            <td className='hide-sm'>\n                <Moment format='YYYY/MM/DD'>{exp.from}</Moment>\n                -{' '}{exp.to === null ? ('Now') : (<Moment format='YYYY/MM/DD'>{exp.to}</Moment>)}\n            </td>\n            <td>\n                <button onClick={() => deleteExperience(exp._id)} className='btn btn-danger'>Delete</button>\n            </td>\n        </tr>\n    ));\n    return (\n        <Fragment>\n            <h2 className=\"my-2\">Experience Credentials</h2>\n            <table className='table'>\n                <thead>\n                    <tr>\n                        <th>Company</th>\n                        <th className=\"hide-sm\">Title</th>\n                        <th className=\"hide-sm\">Years</th>\n                        <th />\n                    </tr>\n                </thead>\n                <tbody>{experiences}</tbody>\n            </table>\n        </Fragment>\n    )\n}\n\nExperience.propTypes = {\n    experience: PropTypes.array.isRequired,\n    deleteExperience: PropTypes.func.isRequired,\n}\n\nexport default connect(null, { deleteExperience })(Experience);\n","import React, { Fragment } from 'react'\nimport PropTypes from 'prop-types'\nimport Moment from 'react-moment';\nimport { connect } from 'react-redux';\nimport { deleteEducation } from '../../actions/profile';\n\n\nconst Education = ({ education, deleteEducation }) => {\n    const educations = education.map(exp => (\n        <tr key={exp._id}>\n            <td>{exp.school}</td>\n            <td className='hide-sm'>{exp.degree}</td>\n            <td className='hide-sm'>\n                <Moment format='YYYY/MM/DD'>{exp.from}</Moment>\n                -{' '}{exp.to === null ? ('Now') : (<Moment format='YYYY/MM/DD'>{exp.to}</Moment>)}\n            </td>\n            <td>\n                <button onClick={() => deleteEducation(exp._id)} className='btn btn-danger'>Delete</button>\n            </td>\n        </tr>\n    ));\n    return (\n        <Fragment>\n            <h2 className=\"my-2\">Education Credentials</h2>\n            <table className='table'>\n                <thead>\n                    <tr>\n                        <th>School/College</th>\n                        <th className=\"hide-sm\">Degree</th>\n                        <th className=\"hide-sm\">Years</th>\n                        <th />\n                    </tr>\n                </thead>\n                <tbody>{educations}</tbody>\n            </table>\n        </Fragment>\n    )\n}\n\nEducation.propTypes = {\n    education: PropTypes.array.isRequired,\n}\n\nexport default connect(null, { deleteEducation })(Education);\n","import React, { useEffect, Fragment } from 'react';\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport Spinner from '../layout/spinner';\nimport { getCurrentProfile } from '../../actions/profile';\nimport DashboardActions from './DashboardActions';\nimport Experience from './experience';\nimport Education from './education';\nimport { deleteAccount } from '../../actions/profile';\n\n\nconst Dashboard = ({ getCurrentProfile, deleteAccount, auth: { user }, profile: { profile, loading } }) => {\n    useEffect(() => {\n        getCurrentProfile();\n    }, [getCurrentProfile]);\n\n    return loading && profile === null ? <Spinner /> :\n        <Fragment>\n            <h1 className=\"large text-primary\">Dashboard</h1>\n            <p className=\"lead\">\n                <i className=\"fas fa-user\" /> Welcome {user && user.name}\n            </p>\n            {profile !== null ?\n                <Fragment>\n                    <DashboardActions />\n                    <Experience experience={profile.experience} />\n                    <Education education={profile.education} />\n                    <div className=\"my-2\">\n                        <button className=\"btn btn-danger\" onClick={() => deleteAccount()}>\n                            <i className=\"fas fa-user-minus\"></i>{' '}Delete Account\n                        </button>\n                    </div>\n                </Fragment> :\n                <Fragment><p>Your Ninja Profile is yet not Complete ! Set up -</p>\n                    <Link to='/create-profile' className='btn btn-primary my-1'>\n                        Create Ninja Profile\n                    </Link></Fragment>}\n        </Fragment>\n\n};\n\nDashboard.propTypes = {\n    getCurrentProfile: PropTypes.func.isRequired,\n    auth: PropTypes.object.isRequired,\n    profile: PropTypes.object.isRequired,\n    deleteAccount: PropTypes.func.isRequired,\n}\n\nconst mapStateToProps = state => ({\n    auth: state.auth,\n    profile: state.profile\n})\n\n\nexport default connect(mapStateToProps, { getCurrentProfile, deleteAccount })(Dashboard);\n","import React, { useState, Fragment } from 'react';\nimport { Link, withRouter } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { createProfile } from '../../actions/profile';\n\nconst CreateProfile = ({ createProfile, history }) => {\n\n    const [formData, setFormData] = useState(\n        {\n            company: '',\n            website: '',\n            location: '',\n            status: '',\n            skills: '',\n            githubusername: '',\n            bio: '',\n            twitter: '',\n            facebook: '',\n            linkedin: '',\n            youtube: '',\n            instagram: ''\n        }\n    );\n\n\n\n    const [displaySocialInputs, toggleSocialInputs] = useState(false);\n\n    const {\n        company,\n        website,\n        location,\n        status,\n        skills,\n        githubusername,\n        bio,\n        twitter,\n        facebook,\n        linkedin,\n        youtube,\n        instagram\n    } = formData;\n\n    const onChange = e => setFormData({ ...formData, [e.target.name]: e.target.value });\n\n    const onSubmit = e => {\n        e.preventDefault();\n        createProfile(formData, history)\n    }\n    return (\n        <Fragment>\n            <h1 class=\"large text-primary\">\n                Create Your Profile\n      </h1>\n            <p class=\"lead\">\n                <i class=\"fas fa-user\"></i> Let's get some information to make your\n                profile stand out\n      </p>\n            <small>* = required field</small>\n            <form class=\"form\" onSubmit={e => onSubmit(e)}>\n                <div class=\"form-group\">\n                    <select name=\"status\" value={status} onChange={e => onChange(e)}>\n                        <option value=\"0\">* Select Professional Status</option>\n                        <option value=\"Developer\">Developer</option>\n                        <option value=\"Junior Developer\">Junior Developer</option>\n                        <option value=\"Senior Developer\">Senior Developer</option>\n                        <option value=\"Manager\">Manager</option>\n                        <option value=\"Student or Learning\">Student or Learning</option>\n                        <option value=\"Instructor\">Instructor or Teacher</option>\n                        <option value=\"Intern\">Intern</option>\n                        <option value=\"Other\">Other</option>\n                    </select>\n                    <small className=\"form-text\"\n                    >Give us an idea of where you are at in your career</small\n                    >\n                </div>\n                <div className=\"form-group\">\n                    <input type=\"text\" placeholder=\"Company\" name=\"company\" value={company} onChange={e => onChange(e)} />\n                    <small className=\"form-text\"\n                    >Could be your own company or one you work for</small\n                    >\n                </div>\n                <div className=\"form-group\">\n                    <input type=\"text\" placeholder=\"Website\" name=\"website\" value={website} onChange={e => onChange(e)} />\n                    <small className=\"form-text\"\n                    >Could be your own or a company website</small\n                    >\n                </div>\n                <div className=\"form-group\">\n                    <input type=\"text\" placeholder=\"Location\" name=\"location\" value={location} onChange={e => onChange(e)} />\n                    <small className=\"form-text\"\n                    >City & state suggested (eg. Boston, MA)</small\n                    >\n                </div>\n                <div className=\"form-group\">\n                    <input type=\"text\" placeholder=\"* Skills\" name=\"skills\" value={skills} onChange={e => onChange(e)} />\n                    <small className=\"form-text\"\n                    >Please use comma separated values (eg.\n            HTML,CSS,JavaScript,PHP)</small\n                    >\n                </div>\n                <div className=\"form-group\">\n                    <input\n                        type=\"text\"\n                        placeholder=\"Github Username\"\n                        name=\"githubusername\"\n                        value={githubusername} onChange={e => onChange(e)}\n                    />\n                    <small className=\"form-text\"\n                    >If you want your latest repos and a Github link, include your\n            username</small\n                    >\n                </div>\n                <div className=\"form-group\">\n                    <textarea placeholder=\"A short bio of yourself\" name=\"bio\" value={bio} onChange={e => onChange(e)}></textarea>\n                    <small className=\"form-text\">Tell us a little about yourself</small>\n                </div>\n\n                <div className=\"my-2\">\n                    <button onClick={() => toggleSocialInputs(!displaySocialInputs)} type=\"button\" className=\"btn btn-light\">\n                        Add Social Network Links\n                </button>\n                    <span>Optional</span>\n                </div>\n\n                {displaySocialInputs && <Fragment>\n\n                    <div className=\"form-group social-input\">\n                        <i className=\"fab fa-twitter fa-2x\"></i>\n                        <input type=\"text\" placeholder=\"Twitter URL\" name=\"twitter\" value={twitter} onChange={e => onChange(e)} />\n                    </div>\n\n                    <div className=\"form-group social-input\">\n                        <i className=\"fab fa-facebook fa-2x\"></i>\n                        <input type=\"text\" placeholder=\"Facebook URL\" name=\"facebook\" value={facebook} onChange={e => onChange(e)} />\n                    </div>\n\n                    <div className=\"form-group social-input\">\n                        <i className=\"fab fa-youtube fa-2x\"></i>\n                        <input type=\"text\" placeholder=\"YouTube URL\" name=\"youtube\" value={youtube} onChange={e => onChange(e)} />\n                    </div>\n\n                    <div className=\"form-group social-input\">\n                        <i className=\"fab fa-linkedin fa-2x\"></i>\n                        <input type=\"text\" placeholder=\"Linkedin URL\" name=\"linkedin\" value={linkedin} onChange={e => onChange(e)} />\n                    </div>\n\n                    <div className=\"form-group social-input\">\n                        <i className=\"fab fa-instagram fa-2x\"></i>\n                        <input type=\"text\" placeholder=\"Instagram URL\" name=\"instagram\" value={instagram} onChange={e => onChange(e)} />\n                    </div>\n                </Fragment>\n                }\n\n\n\n                <input type=\"submit\" className=\"btn btn-primary my-1\" />\n                <a className=\"btn btn-light my-1\" href=\"dashboard.html\">Go Back</a>\n            </form>\n        </Fragment>\n    )\n}\n\nCreateProfile.propTypes = {\n    createProfile: PropTypes.func.isRequired,\n};\n\nexport default connect(null, { createProfile })(withRouter(CreateProfile));\n","import React, { Component } from 'react';\nimport { Route, Redirect } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\n\nconst PrivateRoute = ({ component: Component, auth: { isAuthenticated, loading }, ...rest }) => (\n    <Route {...rest} render={props => !isAuthenticated && !loading ? (<Redirect to='/login' />) : (<Component {...props} />)} />\n)\n\nPrivateRoute.propTypes = {\n    auth: PropTypes.object.isRequired\n}\nconst mapStateToProps = state => ({\n    auth: state.auth\n});\n\nexport default connect(mapStateToProps)(PrivateRoute)\n","import React, { useState, Fragment, useEffect } from 'react';\nimport { Link, withRouter } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { createProfile, getCurrentProfile } from '../../actions/profile';\n\nconst EditProfile = ({ profile: { profile, loading }, createProfile, getCurrentProfile, history }) => {\n\n    const [formData, setFormData] = useState(\n        {\n            company: '',\n            website: '',\n            location: '',\n            status: '',\n            skills: '',\n            githubusername: '',\n            bio: '',\n            twitter: '',\n            facebook: '',\n            linkedin: '',\n            youtube: '',\n            instagram: ''\n        }\n    );\n\n\n\n    const [displaySocialInputs, toggleSocialInputs] = useState(false);\n\n    useEffect(() => {\n        getCurrentProfile();\n        setFormData({\n            company: loading || !profile.company ? '' : profile.company,\n            website: loading || !profile.website ? '' : profile.website,\n            location: loading || !profile.location ? '' : profile.location,\n            status: loading || !profile.status ? '' : profile.status,\n            skills: loading || !profile.skills ? '' : profile.skills.join(','),\n            bio: loading || !profile.bio ? '' : profile.bio,\n            githubusername: loading || !profile.githubusername ? '' : profile.githubusername,\n            bio: loading || !profile.bio ? '' : profile.bio,\n            twitter: loading || !profile.social ? '' : profile.social.twitter,\n            facebook: loading || !profile.social ? '' : profile.social.facebook,\n            linkedin: loading || !profile.social ? '' : profile.social.linkedin,\n            youtube: loading || !profile.social ? '' : profile.social.youtube,\n            instagram: loading || !profile.social ? '' : profile.social.instagram,\n        });\n\n    }, [loading, getCurrentProfile]);\n    const {\n        company,\n        website,\n        location,\n        status,\n        skills,\n        githubusername,\n        bio,\n        twitter,\n        facebook,\n        linkedin,\n        youtube,\n        instagram\n    } = formData;\n\n    const onChange = e => setFormData({ ...formData, [e.target.name]: e.target.value });\n\n    const onSubmit = e => {\n        e.preventDefault();\n        createProfile(formData, history)\n    }\n    return (\n        <Fragment>\n            <h1 class=\"large text-primary\">\n                Create Your Profile\n      </h1>\n            <p class=\"lead\">\n                <i class=\"fas fa-user\"></i> Let's get some information to make your\n                profile stand out\n      </p>\n            <small>* = required field</small>\n            <form class=\"form\" onSubmit={e => onSubmit(e)}>\n                <div class=\"form-group\">\n                    <select name=\"status\" value={status} onChange={e => onChange(e)}>\n                        <option value=\"0\">* Select Professional Status</option>\n                        <option value=\"Developer\">Developer</option>\n                        <option value=\"Junior Developer\">Junior Developer</option>\n                        <option value=\"Senior Developer\">Senior Developer</option>\n                        <option value=\"Manager\">Manager</option>\n                        <option value=\"Student or Learning\">Student or Learning</option>\n                        <option value=\"Instructor\">Instructor or Teacher</option>\n                        <option value=\"Intern\">Intern</option>\n                        <option value=\"Other\">Other</option>\n                    </select>\n                    <small className=\"form-text\"\n                    >Give us an idea of where you are at in your career</small\n                    >\n                </div>\n                <div className=\"form-group\">\n                    <input type=\"text\" placeholder=\"Company\" name=\"company\" value={company} onChange={e => onChange(e)} />\n                    <small className=\"form-text\"\n                    >Could be your own company or one you work for</small\n                    >\n                </div>\n                <div className=\"form-group\">\n                    <input type=\"text\" placeholder=\"Website\" name=\"website\" value={website} onChange={e => onChange(e)} />\n                    <small className=\"form-text\"\n                    >Could be your own or a company website</small\n                    >\n                </div>\n                <div className=\"form-group\">\n                    <input type=\"text\" placeholder=\"Location\" name=\"location\" value={location} onChange={e => onChange(e)} />\n                    <small className=\"form-text\"\n                    >City & state suggested (eg. Boston, MA)</small\n                    >\n                </div>\n                <div className=\"form-group\">\n                    <input type=\"text\" placeholder=\"* Skills\" name=\"skills\" value={skills} onChange={e => onChange(e)} />\n                    <small className=\"form-text\"\n                    >Please use comma separated values (eg.\n            HTML,CSS,JavaScript,PHP)</small\n                    >\n                </div>\n                <div className=\"form-group\">\n                    <input\n                        type=\"text\"\n                        placeholder=\"Github Username\"\n                        name=\"githubusername\"\n                        value={githubusername} onChange={e => onChange(e)}\n                    />\n                    <small className=\"form-text\"\n                    >If you want your latest repos and a Github link, include your\n            username</small\n                    >\n                </div>\n                <div className=\"form-group\">\n                    <textarea placeholder=\"A short bio of yourself\" name=\"bio\" value={bio} onChange={e => onChange(e)}></textarea>\n                    <small className=\"form-text\">Tell us a little about yourself</small>\n                </div>\n\n                <div className=\"my-2\">\n                    <button onClick={() => toggleSocialInputs(!displaySocialInputs)} type=\"button\" className=\"btn btn-light\">\n                        Add Social Network Links\n                </button>\n                    <span>Optional</span>\n                </div>\n\n                {displaySocialInputs && <Fragment>\n\n                    <div className=\"form-group social-input\">\n                        <i className=\"fab fa-twitter fa-2x\"></i>\n                        <input type=\"text\" placeholder=\"Twitter URL\" name=\"twitter\" value={twitter} onChange={e => onChange(e)} />\n                    </div>\n\n                    <div className=\"form-group social-input\">\n                        <i className=\"fab fa-facebook fa-2x\"></i>\n                        <input type=\"text\" placeholder=\"Facebook URL\" name=\"facebook\" value={facebook} onChange={e => onChange(e)} />\n                    </div>\n\n                    <div className=\"form-group social-input\">\n                        <i className=\"fab fa-youtube fa-2x\"></i>\n                        <input type=\"text\" placeholder=\"YouTube URL\" name=\"youtube\" value={youtube} onChange={e => onChange(e)} />\n                    </div>\n\n                    <div className=\"form-group social-input\">\n                        <i className=\"fab fa-linkedin fa-2x\"></i>\n                        <input type=\"text\" placeholder=\"Linkedin URL\" name=\"linkedin\" value={linkedin} onChange={e => onChange(e)} />\n                    </div>\n\n                    <div className=\"form-group social-input\">\n                        <i className=\"fab fa-instagram fa-2x\"></i>\n                        <input type=\"text\" placeholder=\"Instagram URL\" name=\"instagram\" value={instagram} onChange={e => onChange(e)} />\n                    </div>\n                </Fragment>\n                }\n\n\n\n                <input type=\"submit\" className=\"btn btn-primary my-1\" />\n                <Link className=\"btn btn-light my-1\" to=\"/dashboard\">Go Back</Link>\n            </form>\n        </Fragment>\n    )\n}\n\nEditProfile.propTypes = {\n    createProfile: PropTypes.func.isRequired,\n    getCurrentProfile: PropTypes.func.isRequired,\n    profile: PropTypes.object.isRequired,\n};\n\nconst mapStateToProps = state => (\n    {\n        profile: state.profile\n    }\n);\nexport default connect(mapStateToProps, { createProfile, getCurrentProfile })(withRouter(EditProfile));\n","import React, { useState, Fragment } from 'react';\nimport { Link, withRouter } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { addExperience } from '../../actions/profile';\n\nconst AddExperience = ({ addExperience, history }) => {\n    const [formData, setFormData] = useState({\n        company: '',\n        title: '',\n        location: '',\n        from: '',\n        to: '',\n        current: false,\n        description: ''\n    });\n\n    const [toDateDisabled, toggleDisabled] = useState(false);\n\n    const {\n        company,\n        title,\n        location,\n        from,\n        to,\n        current,\n        description\n    } = formData;\n    const onChange = e => setFormData({ ...formData, [e.target.name]: e.target.value })\n    const onSubmit = e => {\n        e.preventDefault();\n        addExperience(formData, history)\n    }\n    return (\n        <Fragment>\n            <h1 class=\"large text-primary\">\n                Add An Experience\n      </h1>\n            <p class=\"lead\">\n                <i class=\"fas fa-code-branch\"></i> Add any developer/programming\n                positions that you have had in the past\n      </p>\n            <small>* = required field</small>\n            <form class=\"form\" onSubmit={e => onSubmit(e)}>\n                <div class=\"form-group\">\n                    <input type=\"text\" placeholder=\"* Job Title\" name=\"title\" value={title} onChange={e => onChange(e)} required />\n                </div>\n                <div class=\"form-group\">\n                    <input type=\"text\" placeholder=\"* Company\" name=\"company\" value={company} onChange={e => onChange(e)} required />\n                </div>\n                <div class=\"form-group\">\n                    <input type=\"text\" placeholder=\"Location\" name=\"location\" value={location} onChange={e => onChange(e)} />\n                </div>\n                <div class=\"form-group\">\n                    <h4>From Date</h4>\n                    <input type=\"date\" name=\"from\" value={from} onChange={e => onChange(e)} />\n                </div>\n                <div class=\"form-group\">\n                    <p><input type=\"checkbox\" name=\"current\" checked={current} value={current} onChange={e => {\n                        setFormData({ ...formData, current: !current })\n                        toggleDisabled(!toDateDisabled);\n                    }} />  {' '} Current Job</p>\n                </div>\n                <div class=\"form-group\">\n                    <h4>To Date</h4>\n                    <input type=\"date\" name=\"to\" value={to} onChange={e => onChange(e)} disabled={toDateDisabled ? 'disabled' : ''} />\n                </div>\n                <div class=\"form-group\">\n                    <textarea\n                        name=\"description\"\n                        cols=\"30\"\n                        rows=\"5\"\n                        placeholder=\"Job Description\"\n                        value={description} onChange={e => onChange(e)}\n                    ></textarea>\n                </div>\n                <input type=\"submit\" class=\"btn btn-primary my-1\" />\n                <Link class=\"btn btn-light my-1\" to=\"/dashboard\">Go Back</Link>\n            </form>\n        </Fragment>\n    )\n}\n\nAddExperience.propTypes = {\n    addExperience: PropTypes.func.isRequired,\n}\n\nexport default connect(null, { addExperience })(withRouter(AddExperience))\n","import React, { useState, Fragment } from 'react';\nimport { Link, withRouter } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { addEducation } from '../../actions/profile';\n\nconst AddEducation = ({ addEducation, history }) => {\n    const [formData, setFormData] = useState({\n        school: '',\n        degree: '',\n        fieldofstudy: '',\n        from: '',\n        to: '',\n        current: false,\n        description: ''\n    });\n\n    const [toDateDisabled, toggleDisabled] = useState(false);\n\n    const {\n        school,\n        degree,\n        fieldofstudy,\n        from,\n        to,\n        current,\n        description\n    } = formData;\n    const onChange = e => setFormData({ ...formData, [e.target.name]: e.target.value })\n    const onSubmit = e => {\n        e.preventDefault();\n        addEducation(formData, history)\n    }\n    return (\n        <Fragment>\n            <h1 class=\"large text-primary\">\n                Add Education\n      </h1>\n            <p class=\"lead\">\n                <i class=\"fas fa-code-branch\"></i> Add any school, bootcamp, etc that\n        you have attended\n      </p>\n            <small>* = required field</small>\n            <form class=\"form\" onSubmit={e => onSubmit(e)}>\n                <div class=\"form-group\">\n                    <input type=\"text\" placeholder=\"* School or Bootcamp\" name=\"school\" value={school} onChange={e => onChange(e)} required />\n                </div>\n                <div class=\"form-group\">\n                    <input type=\"text\" placeholder=\"* Degree\" name=\"degree\" value={degree} onChange={e => onChange(e)} required />\n                </div>\n                <div class=\"form-group\">\n                    <input type=\"text\" placeholder=\"Field of Study\" name=\"fieldofstudy\" value={fieldofstudy} onChange={e => onChange(e)} />\n                </div>\n                <div class=\"form-group\">\n                    <h4>From Date</h4>\n                    <input type=\"date\" name=\"from\" value={from} onChange={e => onChange(e)} />\n                </div>\n                <div class=\"form-group\">\n                    <p><input type=\"checkbox\" name=\"current\" checked={current} value={current} onChange={e => {\n                        setFormData({ ...formData, current: !current })\n                        toggleDisabled(!toDateDisabled);\n                    }} />  {' '} Current Job</p>\n                </div>\n                <div class=\"form-group\">\n                    <h4>To Date</h4>\n                    <input type=\"date\" name=\"to\" value={to} onChange={e => onChange(e)} disabled={toDateDisabled ? 'disabled' : ''} />\n                </div>\n                <div class=\"form-group\">\n                    <textarea\n                        name=\"description\"\n                        cols=\"30\"\n                        rows=\"5\"\n                        placeholder=\"Program Description\"\n                        value={description} onChange={e => onChange(e)}\n                    ></textarea>\n                </div>\n                <input type=\"submit\" class=\"btn btn-primary my-1\" />\n                <Link class=\"btn btn-light my-1\" to=\"/dashboard\">Go Back</Link>\n            </form>\n        </Fragment>\n    )\n}\n\naddEducation.propTypes = {\n    addEducation: PropTypes.func.isRequired,\n}\n\nexport default connect(null, { addEducation })(withRouter(AddEducation))\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { Link } from 'react-router-dom';\n\nconst ProfileItem = ({\n    profile: {\n        user: { _id, name, avatar },\n        status, company, location, skills\n    }\n}) => {\n    return (\n        <div className=\"profile bg-light\">\n            <img src={avatar} alt=\"\" className=\"round-img\" />\n            <div>\n                <h2>{name}</h2>\n                <p>{status}{company && <span> at {company}</span>}</p>\n                <p className=\"mu-1\">{location && <span>{location}</span>}</p>\n                <Link to={`/profile/${_id}`} className='btn btn-primary'>\n                    View Profile\n    </Link>\n            </div>\n            <ul>\n                {skills.slice(0, 4).map((skill, index) => (\n                    <li key={index} className=\"text-primary\">\n                        <i class=\"fas fa-check-circle\"></i>{'  '}{skill}\n                    </li>\n                ))}\n            </ul>\n        </div>\n    )\n}\n\nProfileItem.propTypes = {\n\n}\n\nProfileItem.propTypes = {\n    profile: PropTypes.object.isRequired\n};\n\nexport default ProfileItem\n","import React, { Fragment, useEffect } from 'react'\nimport PropTypes from 'prop-types'\nimport { connect } from 'react-redux';\nimport Spinner from '../layout/spinner';\nimport { getProfiles } from '../../actions/profile';\nimport ProfileItem from './profile-item'\n\nconst Profiles = ({ getProfiles, profile: { profiles, loading } }) => {\n\n    useEffect(() => {\n        getProfiles();\n    }, [getProfiles]);\n\n    return <Fragment>\n        {loading ? <Spinner /> : <Fragment>\n            <h1 className='large text-primary'>Our Ninjas</h1>\n            <p className='lead'>\n                <i class=\"fas fa-arrow-alt-circle-down\">{' '}Make Connections</i>\n            </p>\n            <div className=\"profiles\">\n                {profiles.length > 0 ? (\n                    profiles.map(prof => (\n                        <ProfileItem key={prof._id} profile={prof} />\n                    ))\n                ) : <h4>No Profiles </h4>}\n            </div>\n        </Fragment>}\n    </Fragment>\n};\n\nProfiles.propTypes = {\n    getProfiles: PropTypes.func.isRequired,\n    profile: PropTypes.object.isRequired,\n};\nconst mapStateToProps = state => ({\n    profile: state.profile\n}\n);\n\nexport default connect(mapStateToProps, { getProfiles })(Profiles);\n","import React from 'react'\nimport PropTypes from 'prop-types'\n\nconst ProfileTop = ({ profile: {\n    status,\n    company,\n    location,\n    website,\n    social,\n    user: { name, avatar }\n} }) => {\n    return (\n        <div class=\"profile-top bg-primary p-2\">\n            <img\n                class=\"round-img my-1\"\n                src={avatar}\n                alt=\"display picture\"\n            />\n            <h1 class=\"large\">{name}</h1>\n            <p class=\"lead\">{status} {company && <span> at {company}</span>}</p>\n            <p>{location && <span>{location}</span>}</p>\n            <div class=\"icons my-1\">\n                {website && (\n                    <a href={website} target=\"_blank\" rel=\"noopener noreferrer\">\n                        <i class=\"fas fa-globe fa-2x\"></i>\n                    </a>\n                )\n                }\n                {social && social.twitter && (\n                    <a href={social.twitter} target=\"_blank\" rel=\"noopener noreferrer\">\n                        <i class=\"fab fa-twitter fa-2x\"></i>\n                    </a>\n                )}\n\n                {social && social.facebook && (\n                    <a href={social.facebook} target=\"_blank\" rel=\"noopener noreferrer\">\n                        <i class=\"fab fa-facebook fa-2x\"></i>\n                    </a>\n                )}\n                {social && social.facebook && (\n                    <a href={social.linkedin} target=\"_blank\" rel=\"noopener noreferrer\">\n                        <i class=\"fab fa-linkedin fa-2x\"></i>\n                    </a>\n                )}\n\n                {social && social.youtube && (\n                    <a href={social.youtube} target=\"_blank\" rel=\"noopener noreferrer\">\n                        <i class=\"fab fa-youtube fa-2x\"></i>\n                    </a>\n                )}\n\n                {social && social.instagram && (\n\n                    <a href={social.instagram} target=\"_blank\" rel=\"noopener noreferrer\">\n                        <i class=\"fab fa-instagram fa-2x\"></i>\n                    </a>\n                )}\n\n\n\n\n\n\n            </div>\n        </div>\n    )\n}\n\nProfileTop.propTypes = {\n    profile: PropTypes.object.isRequired,\n};\n\nexport default ProfileTop\n","import React, { Fragment } from 'react'\nimport PropTypes from 'prop-types'\n\nconst ProfileAbout = ({ profile: {\n    bio,\n    skills,\n    user: { name }\n} }) => {\n    return (\n        <div class=\"profile-about bg-light p-2\">\n            {bio && (\n                <Fragment>\n                    <h2 class=\"text-primary\">{name.trim().split(' ')[0]}'s Biography</h2>\n                    <p>\n                        {bio}\n                    </p>\n                    <div class=\"line\"></div>\n                </Fragment>\n            )}\n\n\n            <h2 class=\"text-primary\">Skill Set</h2>\n            <div class=\"skills\">\n                {skills.map((skill, index) => (\n                    <div key={index} className=\"p-1\">\n                        <i class=\"fas fa-check-circle\"></i> {skill}\n                    </div>\n                ))}\n            </div>\n        </div>\n    )\n}\n\nProfileAbout.propTypes = {\n    profile: PropTypes.object.isRequired,\n}\n\nexport default ProfileAbout;\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport Moment from 'react-moment';\n\nconst ProfileExperience = ({\n    experience: { company, title, location, current, to, from, description }\n}\n) =>\n    <div>\n        <h3 className=\"text-dark\">{company}</h3>\n        <p>\n            <Moment format='DD/MM/YYYY'>{from}</Moment> - {!to ? 'Now' : <Moment format='DD/MM/YYYY'>{to}</Moment>}\n        </p>\n        <p>\n            <strong>Position:</strong>{title}\n        </p>\n        <p>\n            <strong>Location:</strong>{location}\n        </p>\n        <p>\n            <strong>Description</strong>{description}\n        </p>\n    </div>\n\nProfileExperience.propTypes = {\n    experience: PropTypes.array.isRequired,\n}\n\nexport default ProfileExperience\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport Moment from 'react-moment';\n\nconst ProfileEducation = ({\n    education: { school, degree, fieldofstudy, current, to, from, description }\n}\n) =>\n    <div>\n        <h3 className=\"text-dark\">{school}</h3>\n        <p>\n            <Moment format='DD/MM/YYYY'>{from}</Moment> - {!to ? 'Now' : <Moment format='DD/MM/YYYY'>{to}</Moment>}\n        </p>\n        <p>\n            <strong>Degree:</strong>{degree}\n        </p>\n        <p>\n            <strong>Fields of Study:</strong>{fieldofstudy}\n        </p>\n        <p>\n            <strong>Description</strong>{description}\n        </p>\n    </div>\n\nProfileEducation.propTypes = {\n    education: PropTypes.array.isRequired,\n}\n\nexport default ProfileEducation\n","import React, { useEffect } from 'react'\nimport PropTypes from 'prop-types'\nimport { connect } from 'react-redux';\nimport { getRepos } from '../../actions/profile';\nimport Spinner from '../layout/spinner';\n\nconst ProfileGithub = ({ username, getRepos, repos }) => {\n    useEffect(() => {\n        getRepos(username);\n    }, [getRepos]);\n\n    return (\n        <div className=\"profile-github\">\n            <h2 className=\"text-primary my-1\">Github Repos</h2>\n            {repos === null ? <Spinner /> : (\n                repos.map(repo =>\n                    (\n                        <div key={repo._id} className=\"repo bg-white p-1 my-1\">\n                            <div>\n                                <h4>\n                                    <a href={repo.html_url} target='_blank' rel='noopener noreferrer'>\n                                        {repo.name}\n                                    </a>\n                                </h4>\n                                <p>{repo.description}</p>\n                            </div>\n                            <div>\n                                <ul>\n                                    <li className='badge badge-primary'>\n                                        Stars : {repo.stargazers_count}\n                                    </li>\n                                    <li className='badge badge-dark'>\n                                        Watchers : {repo.watchers_count}\n                                    </li>\n                                    <li className='badge badge-light'>\n                                        Forks : {repo.forks_count}\n                                    </li>\n                                </ul>\n                            </div>\n                        </div>\n                    ))\n            )}\n        </div>\n    );\n}\n\nProfileGithub.propTypes = {\n    getRepos: PropTypes.func.isRequired,\n    repos: PropTypes.array.isRequired,\n    username: PropTypes.string.isRequired,\n\n};\nconst mapStateToProps = state => ({\n    repos: state.profile.repos\n}\n);\n\nexport default connect(mapStateToProps, { getRepos })(ProfileGithub)\n","import React, { Fragment, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport Spinner from '../layout/spinner';\nimport { getProfileById } from '../../actions/profile';\nimport { Link } from 'react-router-dom';\nimport ProfileTop from './ProfileTop';\nimport ProfileAbout from './ProfileAbout';\nimport ProfileExperience from './ProfileExperience';\nimport ProfileEducation from './ProfileEducation';\nimport ProfileGithub from './ProfileGithub';\nconst Profile = ({ getProfileById, profile: { profile, loading }, match, auth }) => {\n\n    useEffect(() => {\n        getProfileById(match.params.id);\n    }, [getProfileById, match.params.id])\n    return (\n        <Fragment>\n            {profile === null || loading ? <Spinner /> : <Fragment>\n                <Link to='/profiles' className='btn btn-light'>Back</Link>\n                {auth.isAuthenticated && auth.loading === false && auth.user._id === profile.user._id && (<Link to='/edit-profile' className='btn btn-dark'>Edit Profile</Link>)}\n                <div className=\"profile-grid my-1\">\n                    <ProfileTop profile={profile} />\n                    <ProfileAbout profile={profile} />\n                    <div className=\"profile-exp bg-white p-2\">\n                        <h2 className=\"text-primary\">Experience</h2>\n                        {profile.experience.length > 0 ? (<Fragment>\n                            {profile.experience.map(experience =>\n                                (\n                                    <ProfileExperience key={experience._id} experience={experience} />\n                                ))}\n                        </Fragment>) : (<h4>No Experience Details</h4>)}\n                    </div>\n                    <div className=\"profile-edu bg-white p-2\">\n                        <h2 className=\"text-primary\">Education</h2>\n                        {profile.education.length > 0 ? (<Fragment>\n                            {profile.education.map(education =>\n                                (\n                                    <ProfileEducation key={education._id} education={education} />\n                                ))}\n                        </Fragment>) : (<h4>No Education Details</h4>)}\n                    </div>\n                    {profile.githubusername && (<ProfileGithub username={profile.githubusername} />)}\n                </div>\n            </Fragment>}\n\n        </Fragment>\n    )\n}\nProfile.propTypes = {\n    getProfileById: PropTypes.func.isRequired,\n    profile: PropTypes.object.isRequired,\n    auth: PropTypes.object.isRequired,\n}\nconst mapStateToProps = state => ({\n    profile: state.profile,\n    auth: state.auth\n});\n\nexport default connect(mapStateToProps, { getProfileById })(Profile)\n","import React, { Fragment } from 'react'\nimport PropTypes from 'prop-types'\nimport { Link } from 'react-router-dom';\nimport Moment from 'react-moment';\nimport { connect } from 'react-redux';\nimport { addLike, removeLike, deletePost } from '../../actions/post';\n\nconst PostItem = ({ addLike, removeLike, deletePost\n    , auth, post: { _id, text, name, avatar, user, likes, comments, date }, showActions }) => {\n\n    return (\n        <div class=\"post bg-white p-1 my-1\">\n            <div>\n                <Link to={`/profile/${user}`}>\n                    <img\n                        class=\"round-img\"\n                        src={avatar}\n                        alt=\"\"\n                    />\n                    <h4>{name}</h4>\n                </Link>\n            </div>\n            <div>\n                <p class=\"my-1\">\n                    {text}\n                </p>\n                <p class=\"post-date\">\n                    Posted On<Moment format=\"DD/MM/YYYY\">{date}</Moment>\n                </p>\n                {showActions && (<Fragment>\n                    <button onClick={e => addLike(_id)} type=\"button\" class=\"btn btn-light\" >\n                        <i class=\"fas fa-thumbs-up\"></i>{' '}\n                        <span>{likes.length > 0 && (<span>{likes.length}</span>)}</span>\n                    </button>\n                    <button onClick={e => removeLike(_id)} type=\"button\" class=\"btn btn-light\" >\n                        <i class=\"far fa-thumbs-down\"></i>\n                    </button>\n                    <Link to={`/posts/${_id}`} class=\"btn btn-primary\">\n                        Discussion {comments.length > 0 && (<span class='comment-count'>{comments.length}</span>)}\n                    </Link>\n                    {!auth.loading && user === auth.user._id && (<button\n                        type=\"button\"\n                        onClick={e => deletePost(_id)}\n                        class=\"btn btn-danger\">\n                        <i class=\"fas fa-times\"></i>\n                    </button>)}\n                </Fragment>)}\n\n            </div>\n        </div>\n    )\n}\nPostItem.defaultProps = {\n    showActions: true\n}\nPostItem.propTypes = {\n    post: PropTypes.object.isRequired,\n    auth: PropTypes.object.isRequired,\n    addLike: PropTypes.func.isRequired,\n    removeLike: PropTypes.func.isRequired,\n    deletePost: PropTypes.func.isRequired,\n\n}\n\nconst mapStateToProps = state => ({\n    auth: state.auth\n});\n\nexport default connect(mapStateToProps, { addLike, removeLike, deletePost })(PostItem)\n","import axios from 'axios';\nimport { setAlert } from './alert';\nimport {\n    GET_POSTS,\n    POST_ERROR,\n    UPDATE_LIKES,\n    DELETE_POST,\n    ADD_POST,\n    GET_POST,\n    ADD_COMMENT,\n    REMOVE_COMMENT\n} from './types';\n\n//getPOSTS\n\nexport const getPosts = () => async dispatch => {\n    try {\n        const res = await axios.get('/api/posts');\n        dispatch({\n            type: GET_POSTS,\n            payload: res.data\n        });\n    } catch (err) {\n        dispatch(\n            {\n                type: POST_ERROR,\n                payload: { msg: err.response.statusText, status: err.response.status }\n            }\n        );\n    }\n};\n\n//add like\n\nexport const addLike = id => async dispatch => {\n    try {\n        const res = await axios.put(`/api/posts/like/${id}`);\n        dispatch({\n            type: UPDATE_LIKES,\n            payload: { id, likes: res.data }\n        });\n    } catch (err) {\n        dispatch(\n            {\n                type: POST_ERROR,\n                payload: { msg: err.response.statusText, status: err.response.status }\n            }\n        );\n    }\n};\n\n//remove likes\nexport const removeLike = id => async dispatch => {\n    try {\n        const res = await axios.put(`/api/posts/unlike/${id}`);\n        dispatch({\n            type: UPDATE_LIKES,\n            payload: { id, likes: res.data }\n        });\n    } catch (err) {\n        dispatch(\n            {\n                type: POST_ERROR,\n                payload: { msg: err.response.statusText, status: err.response.status }\n            }\n        );\n    }\n};\n\n\n//delete post\nexport const deletePost = id => async dispatch => {\n    try {\n        const res = await axios.delete(`/api/posts/${id}`);\n        dispatch({\n            type: DELETE_POST,\n            payload: id\n        });\n        dispatch(setAlert('Post Removed', 'success'));\n    } catch (err) {\n        dispatch(\n            {\n                type: POST_ERROR,\n                payload: { msg: err.response.statusText, status: err.response.status }\n            }\n        );\n    }\n};\n\n//add post\nexport const addPost = formData => async dispatch => {\n    const config = {\n        headers: {\n            'Content-Type': 'application/json'\n        }\n    }\n    try {\n        const res = await axios.post(`/api/posts`, formData, config);\n        dispatch({\n            type: ADD_POST,\n            payload: res.data\n        });\n        dispatch(setAlert('Post Created', 'success'));\n    } catch (err) {\n        dispatch(\n            {\n                type: POST_ERROR,\n                payload: { msg: err.response.statusText, status: err.response.status }\n            }\n        );\n    }\n};\n\n//getPOST\n\nexport const getPost = id => async dispatch => {\n    try {\n        const res = await axios.get(`/api/posts/${id}`);\n        dispatch({\n            type: GET_POST,\n            payload: res.data\n        });\n    } catch (err) {\n        dispatch(\n            {\n                type: POST_ERROR,\n                payload: { msg: err.response.statusText, status: err.response.status }\n            }\n        );\n    }\n};\n\n//add comment\nexport const addComment = (postId, formData) => async dispatch => {\n    const config = {\n        headers: {\n            'Content-Type': 'application/json'\n        }\n    }\n    try {\n        const res = await axios.post(`/api/posts/comment/${postId}`, formData, config);\n        dispatch({\n            type: ADD_COMMENT,\n            payload: res.data\n        });\n    } catch (err) {\n        dispatch(\n            {\n                type: POST_ERROR,\n                payload: { msg: err.response.statusText, status: err.response.status }\n            }\n        );\n    }\n};\n\n//deletecomment\nexport const deleteComment = (postId, commentId) => async dispatch => {\n\n    try {\n        const res = await axios.delete(`/api/posts/comment/${postId}/${commentId}`);\n        dispatch({\n            type: REMOVE_COMMENT,\n            payload: commentId\n        });\n    } catch (err) {\n        dispatch(\n            {\n                type: POST_ERROR,\n                payload: { msg: err.response.statusText, status: err.response.status }\n            }\n        );\n    }\n};\n\n","import React, { useState } from 'react'\nimport PropTypes from 'prop-types'\nimport { connect } from 'react-redux';\nimport { addPost } from '../../actions/post';\n\nconst PostForm = ({ addPost }) => {\n    const [text, setText] = useState('');\n    return (\n        <div class=\"post-form\">\n            <div class=\"bg-primary p\">\n                <h3>Whats's in Mind ? ...</h3>\n            </div>\n            <form class=\"form my-1\" onSubmit={e => {\n                e.preventDefault();\n                addPost({ text });\n                setText('');\n            }}>\n                <textarea\n                    name=\"text\"\n                    cols=\"30\"\n                    rows=\"5\"\n                    placeholder=\"Write Something ...\"\n                    value={text}\n                    onChange={e => setText(e.target.value)}\n                    required\n                ></textarea>\n                <input type=\"submit\" class=\"btn btn-dark my-1\" value=\"Submit\" />\n            </form>\n        </div>\n    )\n}\n\nPostForm.propTypes = {\n    addPost: PropTypes.func.isRequired,\n}\n\nexport default connect(null, { addPost })(PostForm)\n","import React, { Fragement, useEffect, Fragment } from 'react'\nimport PropTypes from 'prop-types'\nimport { connect } from 'react-redux';\nimport Spinner from '../layout/spinner';\nimport { getPosts } from '../../actions/post';\nimport PostItem from './PostItem';\nimport PostForm from './PostForm';\n\nconst Posts = ({ getPosts, post: { posts, loading } }) => {\n\n    useEffect(() => {\n        getPosts();\n    }, [getPosts]);\n\n    return loading ? <Spinner /> : <Fragment>\n        <h1 className=\"large text-primary\">Feed</h1>\n        <p className=\"lead\">\n            <i className=\"fas fa-user\"></i> Welcome to the Ninja Community\n        </p>\n\n        {/* Post Form*/}\n        <PostForm />\n        <div className=\"posts\">\n            {posts.map(post => (\n                <PostItem key={post._id} post={post} />\n            ))}\n        </div>\n    </Fragment>;\n};\n\nPosts.propTypes = {\n    getPosts: PropTypes.func.isRequired,\n    post: PropTypes.object.isRequired,\n}\nconst mapStateToProps = state => ({\n    post: state.post\n});\n\nexport default connect(mapStateToProps, { getPosts })(Posts)\n","import React, { Fragment, useState } from 'react'\nimport PropTypes from 'prop-types'\nimport { connect } from 'react-redux';\nimport { addComment } from '../../actions/post';\n\nconst CommentForm = ({ postId, addComment }) => {\n    const [text, setText] = useState('');\n    return (\n        <div class=\"post-form\">\n            <div class=\"bg-primary p\">\n                <h3>Reply..</h3>\n            </div>\n            <form class=\"form my-1\" onSubmit={e => {\n                e.preventDefault();\n                addComment(postId, { text });\n                setText('');\n            }}>\n                <textarea\n                    name=\"text\"\n                    cols=\"30\"\n                    rows=\"5\"\n                    placeholder=\"Comment...\"\n                    value={text}\n                    onChange={e => setText(e.target.value)}\n                    required\n                ></textarea>\n                <input type=\"submit\" class=\"btn btn-dark my-1\" value=\"Submit\" />\n            </form>\n        </div>\n    )\n}\n\nCommentForm.propTypes = {\n    addComment: PropTypes.func.isRequired,\n}\n\nexport default connect(null, { addComment })(CommentForm)\n","import React, { Fragment } from 'react'\nimport PropTypes from 'prop-types'\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport Moment from 'react-moment';\nimport { deleteComment } from '../../actions/post';\n\nconst CommentItem = ({ postId, comment: { _id, text, name, avatar, user, date }, auth, deleteComment }) => {\n    return (\n        <div class=\"post bg-white p-1 my-1\">\n            <div>\n                <Link to={`/profile/${user}`}>\n                    <img class=\"round-img\" src={avatar} alt=\"\" />\n                    <h4>{name}</h4>\n                </Link>\n            </div>\n            <div>\n                <p class=\"my-1\">{text}</p>\n                <p class=\"post-date\">\n                    Posted on <Moment format=\"DD/MM/YYYY\">{date}</Moment>\n                </p>\n                {!auth.loading && user === auth.user._id && (\n                    <buttton onClick={e => deleteComment(postId, _id)} type=\"button\" className=\"btn btn-danger\"><i className=\"fas fa-times\"></i></buttton>\n                )}\n            </div>\n        </div>\n    )\n}\n\nCommentItem.propTypes = {\n    postId: PropTypes.number.isRequired,\n    comment: PropTypes.object.isRequired,\n    auth: PropTypes.object.isRequired,\n    deleteComment: PropTypes.func.isRequired,\n}\nconst mapStateToProps = state => ({\n    auth: state.auth,\n})\n\nexport default connect(mapStateToProps, { deleteComment })(CommentItem)\n","import React, { Fragment, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport Spinner from '../layout/spinner';\nimport PostItem from '../Posts/PostItem';\nimport { getPost } from '../../actions/post';\nimport { Link } from 'react-router-dom';\nimport CommentForm from './CommentForm';\nimport CommentItem from './CommentItem';\n\n\n\nconst Post = ({ getPost, post: { post, loading }, match }) => {\n    useEffect(() => {\n        getPost(match.params.id);\n    }, [getPost]);\n    return loading || post === null ? <Spinner /> : <Fragment>\n        <PostItem post={post} showActions={false} />\n        <CommentForm postId={post._id} />\n        <div className=\"comments\">\n            {post.comments.map(comment => (\n                <CommentItem key={comment._id} postId={post._id} comment={comment} />\n            ))}\n        </div>\n        <Link to=\"/posts\" className='btn'>Back</Link>\n    </Fragment>\n}\n\nPost.propTypes = {\n    getPost: PropTypes.func.isRequired,\n    post: PropTypes.object.isRequired,\n}\nconst mapStateToProps = state => ({\n    post: state.post\n})\n\nexport default connect(mapStateToProps, { getPost })(Post)\n","\nimport { SET_ALERT, REMOVE_ALERT } from '../actions/types';\nconst initialState = [];\nexport default function (state = initialState, action) {\n    const { type, payload } = action;\n    switch (type) {\n\n        case SET_ALERT:\n            return [...state, payload];\n        case REMOVE_ALERT:\n            return state.filter(alert => alert.id !== payload);\n        default:\n            return state;\n    }\n}","import { REGISTER_SUCCESS, REGISTER_FAIL, USER_LOADED, AUTH_ERROR, LOGIN_SUCCESS, LOGIN_FAIL, LOGOUT, DELETE_ACCOUNT } from '../actions/types';\nconst initialState = {\n    token: localStorage.getItem('token'),\n    isAuthenticated: null,\n    loading: true,\n    user: null\n}\n\nexport default function (state = initialState, action) {\n    const { type, payload } = action;\n    switch (type) {\n\n        case USER_LOADED:\n            return {\n                ...state,\n                isAuthenticated: true,\n                loading: false,\n                user: payload\n            }\n\n        case REGISTER_SUCCESS:\n        case LOGIN_SUCCESS:\n            localStorage.setItem('token', payload.token);\n            return { ...state, ...payload, isAuthenticated: true, loading: false };\n        case REGISTER_FAIL:\n        case LOGIN_FAIL:\n        case LOGOUT:\n        case DELETE_ACCOUNT:\n        case AUTH_ERROR:\n            localStorage.removeItem('token');\n            return { ...state, token: null, isAuthenticated: false, loading: false };\n        default:\n            return state;\n    }\n}","import { GET_PROFILE, PROFILE_ERROR, CLEAR_PROFILE, UPDATE_PROFILE, GET_PROFILES, GET_REPOS } from \"../actions/types\";\n\nconst initialState = {\n    profile: null,\n    profiles: [],\n    repos: [],\n    loading: true,\n    error: {}\n}\n\n\n\nexport default function (state = initialState, action) {\n    const { type, payload } = action;\n\n    switch (type) {\n        case GET_PROFILE:\n        case UPDATE_PROFILE:\n            return {\n                ...state,\n                profile: payload,\n                loading: false\n            };\n        case GET_PROFILES:\n            return {\n                ...state,\n                profiles: payload,\n                loading: false\n            };\n        case PROFILE_ERROR:\n            return {\n                ...state,\n                error: payload,\n                loading: false\n            };\n        case CLEAR_PROFILE:\n            return {\n                ...state,\n                profile: null,\n                repos: [],\n                loading: true\n\n            };\n        case GET_REPOS:\n            return {\n                ...state,\n                repos: payload,\n                loading: false\n\n            };\n        default:\n            return state;\n    }\n}","\nimport {\n    GET_POSTS,\n    POST_ERROR,\n    UPDATE_LIKES,\n    DELETE_POST,\n    ADD_POST,\n    GET_POST,\n    ADD_COMMENT,\n    REMOVE_COMMENT\n} from '../actions/types';\n\nconst initialstate = {\n    posts: [],\n    post: null,\n    loading: true,\n    error: {}\n}\n\nexport default function (state = initialstate, action) {\n    const { type, payload } = action;\n\n    switch (type) {\n        case GET_POSTS:\n            return {\n                ...state,\n                posts: payload,\n                loading: false\n            }\n        case GET_POST:\n            return {\n                ...state,\n                post: payload,\n                loading: false\n            }\n        case ADD_POST:\n            return {\n                ...state,\n                posts: [payload, ...state.posts],\n                loading: false\n            }\n        case ADD_COMMENT:\n            return {\n                ...state,\n                post: { ...state.post, comments: payload },\n                loading: false\n            }\n        case POST_ERROR:\n            return {\n                ...state,\n                error: payload,\n                loading: false\n            }\n        case UPDATE_LIKES:\n            return {\n                ...state,\n                posts: state.posts.map(post => post._id === payload.id ? { ...post, likes: payload.likes } : post),\n                loading: false\n            }\n\n        case DELETE_POST:\n            return {\n                ...state,\n                posts: state.posts.filter(post => post._id !== payload),\n                loading: false\n            }\n\n        case REMOVE_COMMENT:\n            return {\n                ...state,\n                post: { ...state.post, comments: state.post.comments.filter(comment => comment._id !== payload) },\n                loading: false\n            }\n\n        default:\n            return {\n                ...state\n            }\n    }\n}","import { combineReducers } from 'redux';\nimport alert from './alert';\nimport auth from './auth';\nimport profile from './profile';\nimport post from './post';\n\n\nexport default combineReducers({\n    alert,\n    auth,\n    profile,\n    post,\n});","import { createStore, applyMiddleware } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport thunk from 'redux-thunk';\nimport rootReducer from './reducers';\n;\n\nconst initialState = {};\nconst middleware = [thunk];\nconst store = createStore(rootReducer, initialState, composeWithDevTools(applyMiddleware(...middleware)));\n\nexport default store;","import React, { Fragment, useEffect } from 'react';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport './App.css';\nimport { loadUser } from './actions/auth';\nimport setAuthToken from './utils/setAuthToken';\nimport Navbar from './components/layout/navbar';\nimport Landing from './components/layout/landing';\n\nimport Login from './components/auth/login';\nimport Register from './components/auth/register';\nimport Alert from './components/layout/Alert';\nimport Dashboard from './components/dashboard/Dashboard';\nimport CreateProfile from './components/profile-forms/CreateProfile';\nimport PrivateRoute from './components/routing/PrivateRoute';\nimport EditProfile from './components/profile-forms/edit-profile';\nimport AddExperience from './components/profile-forms/add-experience';\nimport AddEducation from './components/profile-forms/add-education';\nimport Profiles from './components/profiles/profiles';\nimport Profile from './components/profile/profile';\nimport Posts from './components/Posts/Posts';\nimport Post from './components/Post/post';\nimport NotFound from './components/layout/NotFound';\n\n\n//Redux\nimport { Provider } from 'react-redux';\nimport store from './store';\nimport addExperience from './components/profile-forms/add-experience';\n\nif (localStorage.token) {\n  setAuthToken(localStorage.token);\n}\n\n\nconst App = () => {\n\n  useEffect(() => {\n    store.dispatch(loadUser());\n  }, []);\n\n  return (\n\n    <Provider store={store}>\n      <Router>\n        <Fragment>\n          <Navbar />\n          <Route exact path='/' component={Landing} />\n          <section className=\"container\">\n            <Alert />\n            <switch>\n              <Route exact path='/register' component={Register} />\n              <Route exact path='/login' component={Login} />\n              <Route exact path='/profiles' component={Profiles} />\n              <Route exact path='/profile/:id' component={Profile} />\n              <PrivateRoute exact path='/dashboard' component={Dashboard} />\n              <PrivateRoute exact path='/create-profile' component={CreateProfile} />\n              <PrivateRoute exact path='/edit-profile' component={EditProfile} />\n              <PrivateRoute exact path='/add-experience' component={AddExperience} />\n              <PrivateRoute exact path='/add-education' component={AddEducation} />\n              <PrivateRoute exact path='/posts' component={Posts} />\n              <PrivateRoute exact path='/posts/:id' component={Post} />\n            </switch>\n          </section>\n        </Fragment>\n      </Router>\n    </Provider>\n\n\n  )\n};\n\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\n\nReactDOM.render(<App />,\n  document.getElementById('root')\n);"],"sourceRoot":""}