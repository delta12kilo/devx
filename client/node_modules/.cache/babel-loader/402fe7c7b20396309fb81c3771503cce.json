{"ast":null,"code":"import React,{useEffect}from'react';import{connect}from'react-redux';import{getRepos}from'../../actions/profile';import Spinner from'../layout/spinner';var ProfileGithub=function ProfileGithub(_ref){var username=_ref.username,getRepos=_ref.getRepos,repos=_ref.repos;useEffect(function(){getRepos(username);},[getRepos]);return/*#__PURE__*/React.createElement(\"div\",{className:\"profile-github\"},/*#__PURE__*/React.createElement(\"h2\",{className:\"text-primary my-1\"},\"Github Repos\"),repos===null?/*#__PURE__*/React.createElement(Spinner,null):repos.map(function(repo){return/*#__PURE__*/React.createElement(\"div\",{key:repo._id,className:\"repo bg-white p-1 my-1\"},/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(\"h4\",null,/*#__PURE__*/React.createElement(\"a\",{href:repo.html_url,target:\"_blank\",rel:\"noopener noreferrer\"},repo.name)),/*#__PURE__*/React.createElement(\"p\",null,repo.description)),/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(\"ul\",null,/*#__PURE__*/React.createElement(\"li\",{className:\"badge badge-primary\"},\"Stars : \",repo.stargazers_count),/*#__PURE__*/React.createElement(\"li\",{className:\"badge badge-dark\"},\"Watchers : \",repo.watchers_count),/*#__PURE__*/React.createElement(\"li\",{className:\"badge badge-light\"},\"Forks : \",repo.forks_count))));}));};var mapStateToProps=function mapStateToProps(state){return{repos:state.profile.repos};};export default connect(mapStateToProps,{getRepos:getRepos})(ProfileGithub);","map":{"version":3,"sources":["/home/imkrishna/Downloads/Dev-X/client/src/components/profile/ProfileGithub.js"],"names":["React","useEffect","connect","getRepos","Spinner","ProfileGithub","username","repos","map","repo","_id","html_url","name","description","stargazers_count","watchers_count","forks_count","mapStateToProps","state","profile"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,EAAgBC,SAAhB,KAAiC,OAAjC,CAEA,OAASC,OAAT,KAAwB,aAAxB,CACA,OAASC,QAAT,KAAyB,uBAAzB,CACA,MAAOC,CAAAA,OAAP,KAAoB,mBAApB,CAEA,GAAMC,CAAAA,aAAa,CAAG,QAAhBA,CAAAA,aAAgB,MAAmC,IAAhCC,CAAAA,QAAgC,MAAhCA,QAAgC,CAAtBH,QAAsB,MAAtBA,QAAsB,CAAZI,KAAY,MAAZA,KAAY,CACrDN,SAAS,CAAC,UAAM,CACZE,QAAQ,CAACG,QAAD,CAAR,CACH,CAFQ,CAEN,CAACH,QAAD,CAFM,CAAT,CAIA,mBACI,2BAAK,SAAS,CAAC,gBAAf,eACI,0BAAI,SAAS,CAAC,mBAAd,iBADJ,CAEKI,KAAK,GAAK,IAAV,cAAiB,oBAAC,OAAD,MAAjB,CACGA,KAAK,CAACC,GAAN,CAAU,SAAAC,IAAI,qBAEN,2BAAK,GAAG,CAAEA,IAAI,CAACC,GAAf,CAAoB,SAAS,CAAC,wBAA9B,eACI,4CACI,2CACI,yBAAG,IAAI,CAAED,IAAI,CAACE,QAAd,CAAwB,MAAM,CAAC,QAA/B,CAAwC,GAAG,CAAC,qBAA5C,EACKF,IAAI,CAACG,IADV,CADJ,CADJ,cAMI,6BAAIH,IAAI,CAACI,WAAT,CANJ,CADJ,cASI,4CACI,2CACI,0BAAI,SAAS,CAAC,qBAAd,aACaJ,IAAI,CAACK,gBADlB,CADJ,cAII,0BAAI,SAAS,CAAC,kBAAd,gBACgBL,IAAI,CAACM,cADrB,CAJJ,cAOI,0BAAI,SAAS,CAAC,mBAAd,aACaN,IAAI,CAACO,WADlB,CAPJ,CADJ,CATJ,CAFM,EAAd,CAHR,CADJ,CAiCH,CAtCD,CA8CA,GAAMC,CAAAA,eAAe,CAAG,QAAlBA,CAAAA,eAAkB,CAAAC,KAAK,QAAK,CAC9BX,KAAK,CAAEW,KAAK,CAACC,OAAN,CAAcZ,KADS,CAAL,EAA7B,CAKA,cAAeL,CAAAA,OAAO,CAACe,eAAD,CAAkB,CAAEd,QAAQ,CAARA,QAAF,CAAlB,CAAP,CAAuCE,aAAvC,CAAf","sourcesContent":["import React, { useEffect } from 'react'\nimport PropTypes from 'prop-types'\nimport { connect } from 'react-redux';\nimport { getRepos } from '../../actions/profile';\nimport Spinner from '../layout/spinner';\n\nconst ProfileGithub = ({ username, getRepos, repos }) => {\n    useEffect(() => {\n        getRepos(username);\n    }, [getRepos]);\n\n    return (\n        <div className=\"profile-github\">\n            <h2 className=\"text-primary my-1\">Github Repos</h2>\n            {repos === null ? <Spinner /> : (\n                repos.map(repo =>\n                    (\n                        <div key={repo._id} className=\"repo bg-white p-1 my-1\">\n                            <div>\n                                <h4>\n                                    <a href={repo.html_url} target='_blank' rel='noopener noreferrer'>\n                                        {repo.name}\n                                    </a>\n                                </h4>\n                                <p>{repo.description}</p>\n                            </div>\n                            <div>\n                                <ul>\n                                    <li className='badge badge-primary'>\n                                        Stars : {repo.stargazers_count}\n                                    </li>\n                                    <li className='badge badge-dark'>\n                                        Watchers : {repo.watchers_count}\n                                    </li>\n                                    <li className='badge badge-light'>\n                                        Forks : {repo.forks_count}\n                                    </li>\n                                </ul>\n                            </div>\n                        </div>\n                    ))\n            )}\n        </div>\n    );\n}\n\nProfileGithub.propTypes = {\n    getRepos: PropTypes.func.isRequired,\n    repos: PropTypes.array.isRequired,\n    username: PropTypes.string.isRequired,\n\n};\nconst mapStateToProps = state => ({\n    repos: state.profile.repos\n}\n);\n\nexport default connect(mapStateToProps, { getRepos })(ProfileGithub)\n"]},"metadata":{},"sourceType":"module"}