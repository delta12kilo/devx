{"ast":null,"code":"import { GET_POSTS, POST_ERROR, UPDATE_LIKES, DELETE_POST, ADD_POST, GET_POST, ADD_COMMENT, REMOVE_COMMENT } from '../actions/types';\nconst initialstate = {\n  posts: [],\n  post: null,\n  loading: true,\n  error: {}\n};\nexport default function (state = initialstate, action) {\n  const {\n    type,\n    payload\n  } = action;\n\n  switch (type) {\n    case GET_POSTS:\n      return { ...state,\n        posts: payload,\n        loading: false\n      };\n\n    case GET_POST:\n      return { ...state,\n        post: payload,\n        loading: false\n      };\n\n    case ADD_POST:\n      return { ...state,\n        posts: [payload, ...state.posts],\n        loading: false\n      };\n\n    case ADD_COMMENT:\n      return { ...state,\n        post: { ...state.post,\n          comments: payload\n        },\n        loading: false\n      };\n\n    case POST_ERROR:\n      return { ...state,\n        error: payload,\n        loading: false\n      };\n\n    case UPDATE_LIKES:\n      return { ...state,\n        posts: state.posts.map(post => post._id === payload.id ? { ...post,\n          likes: payload.likes\n        } : post),\n        loading: false\n      };\n\n    case DELETE_POST:\n      return { ...state,\n        posts: state.posts.filter(post => post._id !== payload),\n        loading: false\n      };\n\n    case REMOVE_COMMENT:\n      return { ...state,\n        post: { ...state.post,\n          comments: state.post.comments.filter(comment => comment._id !== payload)\n        },\n        loading: false\n      };\n\n    default:\n      return { ...state\n      };\n  }\n}","map":{"version":3,"sources":["/home/imkrishna/Downloads/Dev-X/client/src/reducers/post.js"],"names":["GET_POSTS","POST_ERROR","UPDATE_LIKES","DELETE_POST","ADD_POST","GET_POST","ADD_COMMENT","REMOVE_COMMENT","initialstate","posts","post","loading","error","state","action","type","payload","comments","map","_id","id","likes","filter","comment"],"mappings":"AACA,SACIA,SADJ,EAEIC,UAFJ,EAGIC,YAHJ,EAIIC,WAJJ,EAKIC,QALJ,EAMIC,QANJ,EAOIC,WAPJ,EAQIC,cARJ,QASO,kBATP;AAWA,MAAMC,YAAY,GAAG;AACjBC,EAAAA,KAAK,EAAE,EADU;AAEjBC,EAAAA,IAAI,EAAE,IAFW;AAGjBC,EAAAA,OAAO,EAAE,IAHQ;AAIjBC,EAAAA,KAAK,EAAE;AAJU,CAArB;AAOA,eAAe,UAAUC,KAAK,GAAGL,YAAlB,EAAgCM,MAAhC,EAAwC;AACnD,QAAM;AAAEC,IAAAA,IAAF;AAAQC,IAAAA;AAAR,MAAoBF,MAA1B;;AAEA,UAAQC,IAAR;AACI,SAAKf,SAAL;AACI,aAAO,EACH,GAAGa,KADA;AAEHJ,QAAAA,KAAK,EAAEO,OAFJ;AAGHL,QAAAA,OAAO,EAAE;AAHN,OAAP;;AAKJ,SAAKN,QAAL;AACI,aAAO,EACH,GAAGQ,KADA;AAEHH,QAAAA,IAAI,EAAEM,OAFH;AAGHL,QAAAA,OAAO,EAAE;AAHN,OAAP;;AAKJ,SAAKP,QAAL;AACI,aAAO,EACH,GAAGS,KADA;AAEHJ,QAAAA,KAAK,EAAE,CAACO,OAAD,EAAU,GAAGH,KAAK,CAACJ,KAAnB,CAFJ;AAGHE,QAAAA,OAAO,EAAE;AAHN,OAAP;;AAKJ,SAAKL,WAAL;AACI,aAAO,EACH,GAAGO,KADA;AAEHH,QAAAA,IAAI,EAAE,EAAE,GAAGG,KAAK,CAACH,IAAX;AAAiBO,UAAAA,QAAQ,EAAED;AAA3B,SAFH;AAGHL,QAAAA,OAAO,EAAE;AAHN,OAAP;;AAKJ,SAAKV,UAAL;AACI,aAAO,EACH,GAAGY,KADA;AAEHD,QAAAA,KAAK,EAAEI,OAFJ;AAGHL,QAAAA,OAAO,EAAE;AAHN,OAAP;;AAKJ,SAAKT,YAAL;AACI,aAAO,EACH,GAAGW,KADA;AAEHJ,QAAAA,KAAK,EAAEI,KAAK,CAACJ,KAAN,CAAYS,GAAZ,CAAgBR,IAAI,IAAIA,IAAI,CAACS,GAAL,KAAaH,OAAO,CAACI,EAArB,GAA0B,EAAE,GAAGV,IAAL;AAAWW,UAAAA,KAAK,EAAEL,OAAO,CAACK;AAA1B,SAA1B,GAA8DX,IAAtF,CAFJ;AAGHC,QAAAA,OAAO,EAAE;AAHN,OAAP;;AAMJ,SAAKR,WAAL;AACI,aAAO,EACH,GAAGU,KADA;AAEHJ,QAAAA,KAAK,EAAEI,KAAK,CAACJ,KAAN,CAAYa,MAAZ,CAAmBZ,IAAI,IAAIA,IAAI,CAACS,GAAL,KAAaH,OAAxC,CAFJ;AAGHL,QAAAA,OAAO,EAAE;AAHN,OAAP;;AAMJ,SAAKJ,cAAL;AACI,aAAO,EACH,GAAGM,KADA;AAEHH,QAAAA,IAAI,EAAE,EAAE,GAAGG,KAAK,CAACH,IAAX;AAAiBO,UAAAA,QAAQ,EAAEJ,KAAK,CAACH,IAAN,CAAWO,QAAX,CAAoBK,MAApB,CAA2BC,OAAO,IAAIA,OAAO,CAACJ,GAAR,KAAgBH,OAAtD;AAA3B,SAFH;AAGHL,QAAAA,OAAO,EAAE;AAHN,OAAP;;AAMJ;AACI,aAAO,EACH,GAAGE;AADA,OAAP;AArDR;AAyDH","sourcesContent":["\nimport {\n    GET_POSTS,\n    POST_ERROR,\n    UPDATE_LIKES,\n    DELETE_POST,\n    ADD_POST,\n    GET_POST,\n    ADD_COMMENT,\n    REMOVE_COMMENT\n} from '../actions/types';\n\nconst initialstate = {\n    posts: [],\n    post: null,\n    loading: true,\n    error: {}\n}\n\nexport default function (state = initialstate, action) {\n    const { type, payload } = action;\n\n    switch (type) {\n        case GET_POSTS:\n            return {\n                ...state,\n                posts: payload,\n                loading: false\n            }\n        case GET_POST:\n            return {\n                ...state,\n                post: payload,\n                loading: false\n            }\n        case ADD_POST:\n            return {\n                ...state,\n                posts: [payload, ...state.posts],\n                loading: false\n            }\n        case ADD_COMMENT:\n            return {\n                ...state,\n                post: { ...state.post, comments: payload },\n                loading: false\n            }\n        case POST_ERROR:\n            return {\n                ...state,\n                error: payload,\n                loading: false\n            }\n        case UPDATE_LIKES:\n            return {\n                ...state,\n                posts: state.posts.map(post => post._id === payload.id ? { ...post, likes: payload.likes } : post),\n                loading: false\n            }\n\n        case DELETE_POST:\n            return {\n                ...state,\n                posts: state.posts.filter(post => post._id !== payload),\n                loading: false\n            }\n\n        case REMOVE_COMMENT:\n            return {\n                ...state,\n                post: { ...state.post, comments: state.post.comments.filter(comment => comment._id !== payload) },\n                loading: false\n            }\n\n        default:\n            return {\n                ...state\n            }\n    }\n}"]},"metadata":{},"sourceType":"module"}