{"ast":null,"code":"import axios from 'axios';\nimport { setAlert } from './alert';\nimport { PROFILE_ERROR, GET_PROFILE, UPDATE_PROFILE, DELETE_ACCOUNT, CLEAR_PROFILE, GET_PROFILES, GET_REPOS } from './types';\nimport setAuthToken from '../utils/setAuthToken'; //Get current users profile\n\nexport const getCurrentProfile = () => async dispatch => {\n  try {\n    const res = await axios.get('/api/profile/me');\n    dispatch({\n      type: GET_PROFILE,\n      payload: res.data\n    });\n  } catch (err) {\n    dispatch({\n      type: PROFILE_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status\n      }\n    });\n  }\n}; //get all Profiles\n\nexport const getProfiles = () => async dispatch => {\n  dispatch({\n    type: CLEAR_PROFILE\n  });\n\n  try {\n    const res = await axios.get('/api/profile');\n    dispatch({\n      type: GET_PROFILES,\n      payload: res.data\n    });\n  } catch (err) {\n    dispatch({\n      type: PROFILE_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status\n      }\n    });\n  }\n}; //get github repos\n\nexport const getRepos = username => async dispatch => {\n  try {\n    const res = await axios.get(`/api/profile/github/${username}`);\n    dispatch({\n      type: GET_REPOS,\n      payload: res.data\n    });\n  } catch (err) {\n    dispatch({\n      type: PROFILE_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status\n      }\n    });\n  }\n}; //getprofileid\n\nexport const getProfileById = userId => async dispatch => {\n  try {\n    const res = await axios.get(`/api/profile/user/${userId}`);\n    dispatch({\n      type: GET_PROFILE,\n      payload: res.data\n    });\n  } catch (err) {\n    dispatch({\n      type: PROFILE_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status\n      }\n    });\n  }\n}; // create or update profile\n\nexport const createProfile = (formData, history, edit = false) => async dispatch => {\n  try {\n    const config = {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    };\n    const res = await axios.post('/api/profile', formData, config);\n    dispatch({\n      type: GET_PROFILE,\n      payload: res.data\n    });\n    dispatch(setAlert(edit ? 'Profile Updated' : 'Profile Created', 'success'));\n\n    if (!edit) {\n      history.push('/dashboard');\n    }\n  } catch (err) {\n    const errors = err.response.data.errors;\n\n    if (errors) {\n      errors.forEach(error => dispatch(setAlert(error.msg, 'danger')));\n    }\n\n    dispatch({\n      type: PROFILE_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status\n      }\n    });\n  }\n}; // Add Experience\n\nexport const addExperience = (formData, history) => async dispatch => {\n  try {\n    const config = {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    };\n    const res = await axios.put('/api/profile/experience', formData, config);\n    dispatch({\n      type: UPDATE_PROFILE,\n      payload: res.data\n    });\n    dispatch(setAlert('Experience Added', 'success'));\n    history.push('/dashboard');\n  } catch (err) {\n    const errors = err.response.data.errors;\n\n    if (errors) {\n      errors.forEach(error => dispatch(setAlert(error.msg, 'danger')));\n    }\n\n    dispatch({\n      type: PROFILE_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status\n      }\n    });\n  }\n}; // Add Education\n\nexport const addEducation = (formData, history) => async dispatch => {\n  try {\n    const config = {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    };\n    const res = await axios.put('/api/profile/education', formData, config);\n    dispatch({\n      type: UPDATE_PROFILE,\n      payload: res.data\n    });\n    dispatch(setAlert('Education Added', 'success'));\n    history.push('/dashboard');\n  } catch (err) {\n    const errors = err.response.data.errors;\n\n    if (errors) {\n      errors.forEach(error => dispatch(setAlert(error.msg, 'danger')));\n    }\n\n    dispatch({\n      type: PROFILE_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status\n      }\n    });\n  }\n}; //delete experience\n\nexport const deleteExperience = id => async dispatch => {\n  try {\n    const res = await axios.delete('/api/profile/experience/${id}');\n    dispatch({\n      type: UPDATE_PROFILE,\n      payload: res.data\n    });\n    dispatch(setAlert('Experience Removed', 'danger'));\n  } catch (err) {\n    const errors = err.response.data.errors;\n\n    if (errors) {\n      errors.forEach(error => dispatch(setAlert(error.msg, 'danger')));\n    }\n\n    dispatch({\n      type: PROFILE_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status\n      }\n    });\n  }\n}; //delete education\n\nexport const deleteEducation = id => async dispatch => {\n  try {\n    const res = await axios.delete('/api/profile/education/${id}');\n    dispatch({\n      type: UPDATE_PROFILE,\n      payload: res.data\n    });\n    dispatch(setAlert('Education Removed', 'danger'));\n  } catch (err) {\n    const errors = err.response.data.errors;\n\n    if (errors) {\n      errors.forEach(error => dispatch(setAlert(error.msg, 'danger')));\n    }\n\n    dispatch({\n      type: PROFILE_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status\n      }\n    });\n  }\n}; //delete Account\n\nexport const deleteAccount = () => async dispatch => {\n  if (window.confirm('Are you sure ! Ninja ?')) {\n    try {\n      const res = await axios.delete('/api/profile');\n      dispatch({\n        type: CLEAR_PROFILE\n      });\n      dispatch({\n        type: DELETE_ACCOUNT\n      });\n      dispatch(setAlert('Your Account has been permanently Deleted', 'danger'));\n    } catch (err) {\n      const errors = err.response.data.errors;\n\n      if (errors) {\n        errors.forEach(error => dispatch(setAlert(error.msg, 'danger')));\n      }\n\n      dispatch({\n        type: PROFILE_ERROR,\n        payload: {\n          msg: err.response.statusText,\n          status: err.response.status\n        }\n      });\n    }\n  }\n};","map":{"version":3,"sources":["/home/imkrishna/Downloads/Dev-X/client/src/actions/profile.js"],"names":["axios","setAlert","PROFILE_ERROR","GET_PROFILE","UPDATE_PROFILE","DELETE_ACCOUNT","CLEAR_PROFILE","GET_PROFILES","GET_REPOS","setAuthToken","getCurrentProfile","dispatch","res","get","type","payload","data","err","msg","response","statusText","status","getProfiles","getRepos","username","getProfileById","userId","createProfile","formData","history","edit","config","headers","post","push","errors","forEach","error","addExperience","put","addEducation","deleteExperience","id","delete","deleteEducation","deleteAccount","window","confirm"],"mappings":"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","sourcesContent":["import axios from 'axios';\nimport { setAlert } from './alert';\nimport { PROFILE_ERROR, GET_PROFILE, UPDATE_PROFILE, DELETE_ACCOUNT, CLEAR_PROFILE, GET_PROFILES, GET_REPOS } from './types';\nimport setAuthToken from '../utils/setAuthToken';\n\n//Get current users profile\n\nexport const getCurrentProfile = () => async dispatch => {\n    try {\n        const res = await axios.get('/api/profile/me');\n\n        dispatch({\n            type: GET_PROFILE,\n            payload: res.data\n        });\n    } catch (err) {\n        dispatch(\n            {\n                type: PROFILE_ERROR,\n                payload: { msg: err.response.statusText, status: err.response.status }\n            }\n        );\n    }\n}\n\n//get all Profiles\n\nexport const getProfiles = () => async dispatch => {\n    dispatch({\n        type: CLEAR_PROFILE\n    });\n    try {\n        const res = await axios.get('/api/profile');\n\n        dispatch({\n            type: GET_PROFILES,\n            payload: res.data\n        });\n    } catch (err) {\n        dispatch(\n            {\n                type: PROFILE_ERROR,\n                payload: { msg: err.response.statusText, status: err.response.status }\n            }\n        );\n    }\n}\n\n\n\n//get github repos\n\nexport const getRepos = username => async dispatch => {\n\n    try {\n        const res = await axios.get(`/api/profile/github/${username}`);\n\n        dispatch({\n            type: GET_REPOS,\n            payload: res.data\n        });\n    } catch (err) {\n        dispatch(\n            {\n                type: PROFILE_ERROR,\n                payload: { msg: err.response.statusText, status: err.response.status }\n            }\n        );\n    }\n}\n\n//getprofileid\n\nexport const getProfileById = userId => async dispatch => {\n\n    try {\n        const res = await axios.get(`/api/profile/user/${userId}`);\n\n        dispatch({\n            type: GET_PROFILE,\n            payload: res.data\n        });\n    } catch (err) {\n        dispatch(\n            {\n                type: PROFILE_ERROR,\n                payload: { msg: err.response.statusText, status: err.response.status }\n            }\n        );\n    }\n}\n// create or update profile\n\nexport const createProfile = (formData, history, edit = false) => async dispatch => {\n    try {\n        const config = {\n            headers:\n            {\n                'Content-Type': 'application/json'\n            }\n        }\n\n        const res = await axios.post('/api/profile', formData, config);\n        dispatch({\n            type: GET_PROFILE,\n            payload: res.data\n        });\n\n        dispatch(setAlert(edit ? 'Profile Updated' : 'Profile Created', 'success'));\n\n        if (!edit) {\n            history.push('/dashboard');\n        }\n\n    } catch (err) {\n        const errors = err.response.data.errors;\n        if (errors) {\n            errors.forEach((error) => dispatch(setAlert(error.msg, 'danger')));\n        }\n        dispatch(\n            {\n                type: PROFILE_ERROR,\n                payload: { msg: err.response.statusText, status: err.response.status }\n            }\n        );\n\n    }\n};\n\n// Add Experience\n\nexport const addExperience = (formData, history) => async dispatch => {\n    try {\n        const config = {\n            headers:\n            {\n                'Content-Type': 'application/json'\n            }\n        }\n\n        const res = await axios.put('/api/profile/experience', formData, config);\n        dispatch({\n            type: UPDATE_PROFILE,\n            payload: res.data\n        });\n\n        dispatch(setAlert('Experience Added', 'success'));\n\n        history.push('/dashboard');\n\n    } catch (err) {\n        const errors = err.response.data.errors;\n        if (errors) {\n            errors.forEach((error) => dispatch(setAlert(error.msg, 'danger')));\n        }\n        dispatch(\n            {\n                type: PROFILE_ERROR,\n                payload: { msg: err.response.statusText, status: err.response.status }\n            }\n        );\n\n    }\n};\n\n// Add Education\n\nexport const addEducation = (formData, history) => async dispatch => {\n    try {\n        const config = {\n            headers:\n            {\n                'Content-Type': 'application/json'\n            }\n        }\n\n        const res = await axios.put('/api/profile/education', formData, config);\n        dispatch({\n            type: UPDATE_PROFILE,\n            payload: res.data\n        });\n\n        dispatch(setAlert('Education Added', 'success'));\n\n        history.push('/dashboard');\n\n    } catch (err) {\n        const errors = err.response.data.errors;\n        if (errors) {\n            errors.forEach((error) => dispatch(setAlert(error.msg, 'danger')));\n        }\n        dispatch(\n            {\n                type: PROFILE_ERROR,\n                payload: { msg: err.response.statusText, status: err.response.status }\n            }\n        );\n\n    }\n};\n\n//delete experience\nexport const deleteExperience = id => async dispatch => {\n    try {\n        const res = await axios.delete('/api/profile/experience/${id}');\n\n        dispatch({\n            type: UPDATE_PROFILE,\n            payload: res.data\n        });\n\n        dispatch(setAlert('Experience Removed', 'danger'));\n\n    } catch (err) {\n        const errors = err.response.data.errors;\n        if (errors) {\n            errors.forEach((error) => dispatch(setAlert(error.msg, 'danger')));\n        }\n        dispatch(\n            {\n                type: PROFILE_ERROR,\n                payload: { msg: err.response.statusText, status: err.response.status }\n            }\n        );\n\n    }\n}\n\n\n//delete education\nexport const deleteEducation = id => async dispatch => {\n    try {\n        const res = await axios.delete('/api/profile/education/${id}');\n\n        dispatch({\n            type: UPDATE_PROFILE,\n            payload: res.data\n        });\n\n        dispatch(setAlert('Education Removed', 'danger'));\n\n    } catch (err) {\n        const errors = err.response.data.errors;\n        if (errors) {\n            errors.forEach((error) => dispatch(setAlert(error.msg, 'danger')));\n        }\n        dispatch(\n            {\n                type: PROFILE_ERROR,\n                payload: { msg: err.response.statusText, status: err.response.status }\n            }\n        );\n\n    }\n}\n\n//delete Account\n\nexport const deleteAccount = () => async dispatch => {\n    if (window.confirm('Are you sure ! Ninja ?')) {\n        try {\n            const res = await axios.delete('/api/profile');\n\n            dispatch({\n                type: CLEAR_PROFILE,\n            });\n\n            dispatch({\n                type: DELETE_ACCOUNT,\n            });\n\n            dispatch(setAlert('Your Account has been permanently Deleted', 'danger'));\n\n        } catch (err) {\n            const errors = err.response.data.errors;\n            if (errors) {\n                errors.forEach((error) => dispatch(setAlert(error.msg, 'danger')));\n            }\n            dispatch(\n                {\n                    type: PROFILE_ERROR,\n                    payload: { msg: err.response.statusText, status: err.response.status }\n                }\n            );\n\n        }\n    }\n}\n\n"]},"metadata":{},"sourceType":"module"}