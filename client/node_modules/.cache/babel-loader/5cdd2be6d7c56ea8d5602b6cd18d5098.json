{"ast":null,"code":"import { REGISTER_SUCCESS, REGISTER_FAIL, USER_LOADED, AUTH_ERROR, LOGIN_SUCCESS, LOGIN_FAIL, LOGOUT, DELETE_ACCOUNT } from '../actions/types';\nconst initialState = {\n  token: localStorage.getItem('token'),\n  isAuthenticated: null,\n  loading: true,\n  user: null\n};\nexport default function (state = initialState, action) {\n  const {\n    type,\n    payload\n  } = action;\n\n  switch (type) {\n    case USER_LOADED:\n      return { ...state,\n        isAuthenticated: true,\n        loading: false,\n        user: payload\n      };\n\n    case REGISTER_SUCCESS:\n    case LOGIN_SUCCESS:\n      localStorage.setItem('token', payload.token);\n      return { ...state,\n        ...payload,\n        isAuthenticated: true,\n        loading: false\n      };\n\n    case REGISTER_FAIL:\n    case LOGIN_FAIL:\n    case LOGOUT:\n    case DELETE_ACCOUNT:\n    case AUTH_ERROR:\n      localStorage.removeItem('token');\n      return { ...state,\n        token: null,\n        isAuthenticated: false,\n        loading: false\n      };\n\n    default:\n      return state;\n  }\n}","map":{"version":3,"sources":["/home/imkrishna/Downloads/Dev-X/client/src/reducers/auth.js"],"names":["REGISTER_SUCCESS","REGISTER_FAIL","USER_LOADED","AUTH_ERROR","LOGIN_SUCCESS","LOGIN_FAIL","LOGOUT","DELETE_ACCOUNT","initialState","token","localStorage","getItem","isAuthenticated","loading","user","state","action","type","payload","setItem","removeItem"],"mappings":"AAAA,SAASA,gBAAT,EAA2BC,aAA3B,EAA0CC,WAA1C,EAAuDC,UAAvD,EAAmEC,aAAnE,EAAkFC,UAAlF,EAA8FC,MAA9F,EAAsGC,cAAtG,QAA4H,kBAA5H;AACA,MAAMC,YAAY,GAAG;AACjBC,EAAAA,KAAK,EAAEC,YAAY,CAACC,OAAb,CAAqB,OAArB,CADU;AAEjBC,EAAAA,eAAe,EAAE,IAFA;AAGjBC,EAAAA,OAAO,EAAE,IAHQ;AAIjBC,EAAAA,IAAI,EAAE;AAJW,CAArB;AAOA,eAAe,UAAUC,KAAK,GAAGP,YAAlB,EAAgCQ,MAAhC,EAAwC;AACnD,QAAM;AAAEC,IAAAA,IAAF;AAAQC,IAAAA;AAAR,MAAoBF,MAA1B;;AACA,UAAQC,IAAR;AAEI,SAAKf,WAAL;AACI,aAAO,EACH,GAAGa,KADA;AAEHH,QAAAA,eAAe,EAAE,IAFd;AAGHC,QAAAA,OAAO,EAAE,KAHN;AAIHC,QAAAA,IAAI,EAAEI;AAJH,OAAP;;AAOJ,SAAKlB,gBAAL;AACA,SAAKI,aAAL;AACIM,MAAAA,YAAY,CAACS,OAAb,CAAqB,OAArB,EAA8BD,OAAO,CAACT,KAAtC;AACA,aAAO,EAAE,GAAGM,KAAL;AAAY,WAAGG,OAAf;AAAwBN,QAAAA,eAAe,EAAE,IAAzC;AAA+CC,QAAAA,OAAO,EAAE;AAAxD,OAAP;;AACJ,SAAKZ,aAAL;AACA,SAAKI,UAAL;AACA,SAAKC,MAAL;AACA,SAAKC,cAAL;AACA,SAAKJ,UAAL;AACIO,MAAAA,YAAY,CAACU,UAAb,CAAwB,OAAxB;AACA,aAAO,EAAE,GAAGL,KAAL;AAAYN,QAAAA,KAAK,EAAE,IAAnB;AAAyBG,QAAAA,eAAe,EAAE,KAA1C;AAAiDC,QAAAA,OAAO,EAAE;AAA1D,OAAP;;AACJ;AACI,aAAOE,KAAP;AAtBR;AAwBH","sourcesContent":["import { REGISTER_SUCCESS, REGISTER_FAIL, USER_LOADED, AUTH_ERROR, LOGIN_SUCCESS, LOGIN_FAIL, LOGOUT, DELETE_ACCOUNT } from '../actions/types';\nconst initialState = {\n    token: localStorage.getItem('token'),\n    isAuthenticated: null,\n    loading: true,\n    user: null\n}\n\nexport default function (state = initialState, action) {\n    const { type, payload } = action;\n    switch (type) {\n\n        case USER_LOADED:\n            return {\n                ...state,\n                isAuthenticated: true,\n                loading: false,\n                user: payload\n            }\n\n        case REGISTER_SUCCESS:\n        case LOGIN_SUCCESS:\n            localStorage.setItem('token', payload.token);\n            return { ...state, ...payload, isAuthenticated: true, loading: false };\n        case REGISTER_FAIL:\n        case LOGIN_FAIL:\n        case LOGOUT:\n        case DELETE_ACCOUNT:\n        case AUTH_ERROR:\n            localStorage.removeItem('token');\n            return { ...state, token: null, isAuthenticated: false, loading: false };\n        default:\n            return state;\n    }\n}"]},"metadata":{},"sourceType":"module"}