{"ast":null,"code":"import _objectWithoutProperties from\"/home/imkrishna/Downloads/Dev-X/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";import React,{Component}from'react';import{Route,Redirect}from'react-router-dom';import{connect}from'react-redux';var PrivateRoute=function PrivateRoute(_ref){var Component=_ref.component,_ref$auth=_ref.auth,isAuthenticated=_ref$auth.isAuthenticated,loading=_ref$auth.loading,rest=_objectWithoutProperties(_ref,[\"component\",\"auth\"]);return/*#__PURE__*/React.createElement(Route,Object.assign({},rest,{render:function render(props){return!isAuthenticated&&!loading?/*#__PURE__*/React.createElement(Redirect,{to:\"/login\"}):/*#__PURE__*/React.createElement(Component,props);}}));};var mapStateToProps=function mapStateToProps(state){return{auth:state.auth};};export default connect(mapStateToProps)(PrivateRoute);","map":{"version":3,"sources":["/home/imkrishna/Downloads/Dev-X/client/src/components/routing/PrivateRoute.js"],"names":["React","Component","Route","Redirect","connect","PrivateRoute","component","auth","isAuthenticated","loading","rest","props","mapStateToProps","state"],"mappings":"iLAAA,MAAOA,CAAAA,KAAP,EAAgBC,SAAhB,KAAiC,OAAjC,CACA,OAASC,KAAT,CAAgBC,QAAhB,KAAgC,kBAAhC,CAEA,OAASC,OAAT,KAAwB,aAAxB,CAEA,GAAMC,CAAAA,YAAY,CAAG,QAAfA,CAAAA,YAAe,UAAcJ,CAAAA,SAAd,MAAGK,SAAH,gBAAyBC,IAAzB,CAAiCC,eAAjC,WAAiCA,eAAjC,CAAkDC,OAAlD,WAAkDA,OAAlD,CAAgEC,IAAhE,wEACjB,oBAAC,KAAD,kBAAWA,IAAX,EAAiB,MAAM,CAAE,gBAAAC,KAAK,QAAI,CAACH,eAAD,EAAoB,CAACC,OAArB,cAAgC,oBAAC,QAAD,EAAU,EAAE,CAAC,QAAb,EAAhC,cAA6D,oBAAC,SAAD,CAAeE,KAAf,CAAjE,EAA9B,GADiB,EAArB,CAOA,GAAMC,CAAAA,eAAe,CAAG,QAAlBA,CAAAA,eAAkB,CAAAC,KAAK,QAAK,CAC9BN,IAAI,CAAEM,KAAK,CAACN,IADkB,CAAL,EAA7B,CAIA,cAAeH,CAAAA,OAAO,CAACQ,eAAD,CAAP,CAAyBP,YAAzB,CAAf","sourcesContent":["import React, { Component } from 'react';\nimport { Route, Redirect } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\n\nconst PrivateRoute = ({ component: Component, auth: { isAuthenticated, loading }, ...rest }) => (\n    <Route {...rest} render={props => !isAuthenticated && !loading ? (<Redirect to='/login' />) : (<Component {...props} />)} />\n)\n\nPrivateRoute.propTypes = {\n    auth: PropTypes.object.isRequired\n}\nconst mapStateToProps = state => ({\n    auth: state.auth\n});\n\nexport default connect(mapStateToProps)(PrivateRoute)\n"]},"metadata":{},"sourceType":"module"}