{"ast":null,"code":"var _jsxFileName = \"/home/imkrishna/Downloads/Dev-X/client/src/components/Posts/PostItem.js\";\nimport React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport Moment from 'react-moment';\nimport { connect } from 'react-redux';\nimport { addLike, removeLike, deletePost } from '../../actions/post';\n\nconst PostItem = ({\n  addLike,\n  removeLike,\n  deletePost,\n  auth,\n  post: {\n    _id,\n    text,\n    name,\n    avatar,\n    user,\n    likes,\n    comments,\n    date\n  },\n  showActions\n}) => {\n  return /*#__PURE__*/React.createElement(\"div\", {\n    class: \"post bg-white p-1 my-1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Link, {\n    to: `/profile/${user}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    class: \"round-img\",\n    src: avatar,\n    alt: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(\"h4\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 21\n    }\n  }, name))), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    class: \"my-1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 17\n    }\n  }, text), /*#__PURE__*/React.createElement(\"p\", {\n    class: \"post-date\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 17\n    }\n  }, \"Posted On\", /*#__PURE__*/React.createElement(Moment, {\n    format: \"DD/MM/YYYY\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 30\n    }\n  }, date)), showActions && /*#__PURE__*/React.createElement(Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 34\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    onClick: e => addLike(_id),\n    type: \"button\",\n    class: \"btn btn-light\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"i\", {\n    class: \"fas fa-thumbs-up\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 25\n    }\n  }), ' ', /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 25\n    }\n  }, likes.length > 0 && /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 53\n    }\n  }, likes.length))), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: e => removeLike(_id),\n    type: \"button\",\n    class: \"btn btn-light\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"i\", {\n    class: \"far fa-thumbs-down\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 25\n    }\n  })), /*#__PURE__*/React.createElement(Link, {\n    to: `/posts/${_id}`,\n    class: \"btn btn-primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 21\n    }\n  }, \"Discussion \", comments.length > 0 && /*#__PURE__*/React.createElement(\"span\", {\n    class: \"comment-count\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 61\n    }\n  }, comments.length)), !auth.loading && user === auth.user._id && /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    onClick: e => deletePost(_id),\n    class: \"btn btn-danger\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 66\n    }\n  }, /*#__PURE__*/React.createElement(\"i\", {\n    class: \"fas fa-times\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 25\n    }\n  })))));\n};\n\nPostItem.defaultProps = {\n  showActions: true\n};\nPostItem.propTypes = {\n  post: PropTypes.object.isRequired,\n  auth: PropTypes.object.isRequired,\n  addLike: PropTypes.func.isRequired,\n  removeLike: PropTypes.func.isRequired,\n  deletePost: PropTypes.func.isRequired\n};\n\nconst mapStateToProps = state => ({\n  auth: state.auth\n});\n\nexport default connect(mapStateToProps, {\n  addLike,\n  removeLike,\n  deletePost\n})(PostItem);","map":{"version":3,"sources":["/home/imkrishna/Downloads/Dev-X/client/src/components/Posts/PostItem.js"],"names":["React","Fragment","PropTypes","Link","Moment","connect","addLike","removeLike","deletePost","PostItem","auth","post","_id","text","name","avatar","user","likes","comments","date","showActions","e","length","loading","defaultProps","propTypes","object","isRequired","func","mapStateToProps","state"],"mappings":"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","sourcesContent":["import React, { Fragment } from 'react'\nimport PropTypes from 'prop-types'\nimport { Link } from 'react-router-dom';\nimport Moment from 'react-moment';\nimport { connect } from 'react-redux';\nimport { addLike, removeLike, deletePost } from '../../actions/post';\n\nconst PostItem = ({ addLike, removeLike, deletePost\n    , auth, post: { _id, text, name, avatar, user, likes, comments, date }, showActions }) => {\n\n    return (\n        <div class=\"post bg-white p-1 my-1\">\n            <div>\n                <Link to={`/profile/${user}`}>\n                    <img\n                        class=\"round-img\"\n                        src={avatar}\n                        alt=\"\"\n                    />\n                    <h4>{name}</h4>\n                </Link>\n            </div>\n            <div>\n                <p class=\"my-1\">\n                    {text}\n                </p>\n                <p class=\"post-date\">\n                    Posted On<Moment format=\"DD/MM/YYYY\">{date}</Moment>\n                </p>\n                {showActions && (<Fragment>\n                    <button onClick={e => addLike(_id)} type=\"button\" class=\"btn btn-light\" >\n                        <i class=\"fas fa-thumbs-up\"></i>{' '}\n                        <span>{likes.length > 0 && (<span>{likes.length}</span>)}</span>\n                    </button>\n                    <button onClick={e => removeLike(_id)} type=\"button\" class=\"btn btn-light\" >\n                        <i class=\"far fa-thumbs-down\"></i>\n                    </button>\n                    <Link to={`/posts/${_id}`} class=\"btn btn-primary\">\n                        Discussion {comments.length > 0 && (<span class='comment-count'>{comments.length}</span>)}\n                    </Link>\n                    {!auth.loading && user === auth.user._id && (<button\n                        type=\"button\"\n                        onClick={e => deletePost(_id)}\n                        class=\"btn btn-danger\">\n                        <i class=\"fas fa-times\"></i>\n                    </button>)}\n                </Fragment>)}\n\n            </div>\n        </div>\n    )\n}\nPostItem.defaultProps = {\n    showActions: true\n}\nPostItem.propTypes = {\n    post: PropTypes.object.isRequired,\n    auth: PropTypes.object.isRequired,\n    addLike: PropTypes.func.isRequired,\n    removeLike: PropTypes.func.isRequired,\n    deletePost: PropTypes.func.isRequired,\n\n}\n\nconst mapStateToProps = state => ({\n    auth: state.auth\n});\n\nexport default connect(mapStateToProps, { addLike, removeLike, deletePost })(PostItem)\n"]},"metadata":{},"sourceType":"module"}