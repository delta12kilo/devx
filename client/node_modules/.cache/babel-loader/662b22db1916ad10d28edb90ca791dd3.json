{"ast":null,"code":"import _regeneratorRuntime from\"/home/imkrishna/Downloads/Dev-X/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/home/imkrishna/Downloads/Dev-X/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _defineProperty from\"/home/imkrishna/Downloads/Dev-X/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";import _objectSpread from\"/home/imkrishna/Downloads/Dev-X/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _slicedToArray from\"/home/imkrishna/Downloads/Dev-X/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{Fragment,useState}from'react';import{Link,Redirect}from'react-router-dom';import{connect}from'react-redux';import{setAlert}from'../../actions/alert';import{register}from'../../actions/auth';import{JsonWebTokenError}from'jsonwebtoken';var Register=function Register(_ref){var setAlert=_ref.setAlert,register=_ref.register,isAuthenticated=_ref.isAuthenticated;var _useState=useState({name:'',email:'',password:'',password2:''}),_useState2=_slicedToArray(_useState,2),formData=_useState2[0],setFormData=_useState2[1];var name=formData.name,email=formData.email,password=formData.password,password2=formData.password2;var _onChange=function onChange(e){return setFormData(_objectSpread(_objectSpread({},formData),{},_defineProperty({},e.target.name,e.target.value)));};var _onSubmit=/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(e){return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:e.preventDefault();if(password!=password2){setAlert(\"Hey ! Ninja, Password Mismatched !\",'danger');}else{register({name:name,email:email,password:password});}case 2:case\"end\":return _context.stop();}}},_callee);}));return function onSubmit(_x){return _ref2.apply(this,arguments);};}();if(isAuthenticated){return/*#__PURE__*/React.createElement(Redirect,{to:\"dashboard\"});}return/*#__PURE__*/React.createElement(Fragment,null,/*#__PURE__*/React.createElement(\"h1\",{className:\"large text-primary\"},\"Be a Ninja\"),/*#__PURE__*/React.createElement(\"p\",{className:\"lead\"},\"  Setup Account  \\xA0 \",/*#__PURE__*/React.createElement(\"i\",{className:\"fas fa-user\"}),\" \"),/*#__PURE__*/React.createElement(\"form\",{className:\"form\",onSubmit:function onSubmit(e){return _onSubmit(e);}},/*#__PURE__*/React.createElement(\"div\",{className:\"form-group\"},/*#__PURE__*/React.createElement(\"input\",{type:\"text\",placeholder:\"Ninja Name\",name:\"name\",value:name,onChange:function onChange(e){return _onChange(e);}})),/*#__PURE__*/React.createElement(\"div\",{className:\"form-group\"},/*#__PURE__*/React.createElement(\"input\",{type:\"email\",placeholder:\"Email Address\",name:\"email\",value:email,onChange:function onChange(e){return _onChange(e);}}),/*#__PURE__*/React.createElement(\"small\",{className:\"form-text\"},\"Use Gravatar email !\")),/*#__PURE__*/React.createElement(\"div\",{className:\"form-group\"},/*#__PURE__*/React.createElement(\"input\",{type:\"password\",placeholder:\"Password\",name:\"password\",value:password,onChange:function onChange(e){return _onChange(e);}})),/*#__PURE__*/React.createElement(\"div\",{className:\"form-group\"},/*#__PURE__*/React.createElement(\"input\",{type:\"password\",placeholder:\"Confirm Password\",name:\"password2\",value:password2,onChange:function onChange(e){return _onChange(e);}})),/*#__PURE__*/React.createElement(\"input\",{type:\"submit\",className:\"btn btn-primary\",value:\"Register\"})),/*#__PURE__*/React.createElement(\"p\",{className:\"my-1\"},\"Already a Ninja? \",/*#__PURE__*/React.createElement(Link,{to:\"/login\"},\"Sign In\")));};var mapStateToProps=function mapStateToProps(state){return{isAuthenticated:state.auth.isAuthenticated};};export default connect(mapStateToProps,{setAlert:setAlert,register:register})(Register);","map":{"version":3,"sources":["/home/imkrishna/Downloads/Dev-X/client/src/components/auth/register.js"],"names":["React","Fragment","useState","Link","Redirect","connect","setAlert","register","JsonWebTokenError","Register","isAuthenticated","name","email","password","password2","formData","setFormData","onChange","e","target","value","onSubmit","preventDefault","mapStateToProps","state","auth"],"mappings":"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","sourcesContent":["import React, { Fragment, useState } from 'react'\nimport { Link, Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { setAlert } from '../../actions/alert';\nimport { register } from '../../actions/auth';\nimport PropTypes from 'prop-types';\n\n\n\nimport { JsonWebTokenError } from 'jsonwebtoken';\n\nconst Register = ({ setAlert, register, isAuthenticated }) => {\n\n    const [formData, setFormData] = useState(\n        {\n            name: '',\n            email: '',\n            password: '',\n            password2: ''\n        }\n    );\n\n    const { name, email, password, password2 } = formData;\n    const onChange = e => setFormData(\n        { ...formData, [e.target.name]: e.target.value }\n    );\n\n    const onSubmit = async e => {\n        e.preventDefault();\n        if (password != password2) {\n            setAlert(\"Hey ! Ninja, Password Mismatched !\", 'danger');\n        }\n        else {\n            register({ name, email, password });\n        }\n\n    }\n\n    if (isAuthenticated) {\n        return <Redirect to=\"dashboard\" />\n    }\n\n    return (\n        <Fragment>\n            <h1 className=\"large text-primary\">Be a Ninja</h1>\n            <p className=\"lead\">  Setup Account  &nbsp; <i className=\"fas fa-user\"></i> </p>\n            <form className=\"form\" onSubmit={e => onSubmit(e)}>\n                <div className=\"form-group\">\n                    <input type=\"text\" placeholder=\"Ninja Name\" name=\"name\" value={name} onChange={e => onChange(e)} />\n                </div>\n                <div className=\"form-group\">\n                    <input type=\"email\" placeholder=\"Email Address\" name=\"email\" value={email} onChange={e => onChange(e)} />\n                    <small className=\"form-text\">Use Gravatar email !</small>\n                </div>\n                <div className=\"form-group\">\n                    <input\n                        type=\"password\"\n                        placeholder=\"Password\"\n                        name=\"password\"\n                        value={password} onChange={e => onChange(e)}\n                    />\n                </div>\n                <div className=\"form-group\">\n                    <input\n                        type=\"password\"\n                        placeholder=\"Confirm Password\"\n                        name=\"password2\"\n                        value={password2} onChange={e => onChange(e)}\n                    />\n                </div>\n                <input type=\"submit\" className=\"btn btn-primary\" value=\"Register\" />\n            </form>\n            <p className=\"my-1\">\n                Already a Ninja? <Link to=\"/login\">Sign In</Link>\n            </p>\n        </Fragment>\n    );\n}\n\nRegister.propTypes = {\n    setAlert: PropTypes.func.isRequired,\n    register: PropTypes.func.isRequired,\n    isAuthenticated: PropTypes.bool,\n};\n\nconst mapStateToProps = state =>\n    ({\n        isAuthenticated: state.auth.isAuthenticated\n\n    });\nexport default connect(mapStateToProps, { setAlert, register })(Register)"]},"metadata":{},"sourceType":"module"}